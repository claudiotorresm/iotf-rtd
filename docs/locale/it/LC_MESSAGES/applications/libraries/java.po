# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/java.rst:2
msgid "Java for Application Developers"
msgstr ""
"Java per gli sviluppatori di applicazioni"

#: ../docs/applications/libraries/java.rst:4
msgid "See `iot-java <https://github.com/ibm-messaging/iot-java>`_ in GitHub"
msgstr ""
"Consultare `iot-java <https://github.com/ibm-messaging/iot-java>`_ in GitHub"

#: ../docs/applications/libraries/java.rst:7
msgid "Constructor"
msgstr ""
"Costruttore"

#: ../docs/applications/libraries/java.rst:9
msgid "The constructor builds the client instance, and accepts a Properties object containing the following definitions:"
msgstr ""
"Il costruttore crea l'istanza client e accetta un oggetto Proprietà che contiene le seguenti definizioni:"

#: ../docs/applications/libraries/java.rst:11
msgid "``org`` - Your organization ID (This is a required field. In case of quickstart flow, provide org as ``quickstart``)."
msgstr ""
"``org`` - ID organizzazione (Questo è un campo obbligatorio. nel caso di un flusso Quickstart, fornire org come ``quickstart``)."

#: ../docs/applications/libraries/java.rst:12
msgid "``id`` - The unique ID of your application within your organization."
msgstr ""
"``id`` - L'ID univoco dell'applicazione nell'ambito dell'organizzazione."

#: ../docs/applications/libraries/java.rst:13
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``apikey``)."
msgstr ""
"``auth-method`` - Metodo di autenticazione (il solo valore attualmente supportato è ``apikey``)."

#: ../docs/applications/libraries/java.rst:14
msgid "``auth-key`` - API key (required if auth-method is ``apikey``)."
msgstr ""
"``auth-key`` - chiave API (richiesto se authmethod è ``apikey``)."

#: ../docs/applications/libraries/java.rst:15
msgid "``auth-token`` - API key token (required if auth-method is ``apikey``)."
msgstr ""
"``auth-token`` - Token chiave API (richiesto se authmethod è ``apikey``)."

#: ../docs/applications/libraries/java.rst:16
msgid "``clean-session`` - true or false (required only if you want to connect the application in durable subscription. By default the clean-session is set to true)."
msgstr ""
"``clean-session`` - true o false (richiesta solo se si desidera connettere l'applicazione nella sottoscrizione duratura. Per impostazione predefinita clean-session è impostato su true)."

#: ../docs/applications/libraries/java.rst:17
msgid "``shared-subscription`` - true or false (required only if shared subscription needs to be enabled)."
msgstr ""
"``shared-subscription`` - true o false (richiesta solo se è necessario abilitare la sottoscrizione condivisa)."

#: ../docs/applications/libraries/java.rst:19
msgid "One must set ``shared-subscription`` to true to build scalable applications which will load balance messages across multiple instances of the application. Refer to the `scalable applications section <https://docs.internetofthings.ibmcloud.com/applications/mqtt.html#/scalable-applications#scalable-applications>`__ for more information about the load balancing."
msgstr ""
"È necessario impostare ``shared-subscription`` su true per creare applicazioni scalabili che realizzeranno il bilanciamento del carico dei messaggi tra più istanze dell'applicazione. Fare riferimento alla sezione relativa alle applicazioni scalabili <https://docs.internetofthings.ibmcloud.com/applications/mqtt.html#/scalable-applications#scalable-applications>`__ per ulteriori informazioni relative al bilanciamento del carico."

#: ../docs/applications/libraries/java.rst:21
msgid "The Properties object creates definitions which are used to interact with the IoT Platform module. If no options are provided or organization is provided as quickstart, the client will connect to the IoT Platform Quickstart, and default to an unregistered device."
msgstr ""
"L'oggetto Proprietà crea le definizioni utilizzate per interagire con il modulo IoT Platform. Se non vengono fornite opzioni o non viene fornita alcuna organizzazione come quickstart, il client effettuerà la connessione a IoT Platform Quickstart e, per impostazione predefinita, ad un dispositivo non registrato."

#: ../docs/applications/libraries/java.rst:23
msgid "The following code snippet shows how to construct the ApplicationClient instance in Quickstart mode,"
msgstr ""
"Il seguente frammento di codice mostra come creare l'istanza ApplicationClient nella modalità Quickstart."

#: ../docs/applications/libraries/java.rst:36
msgid "The following code snippet shows how to construct the ApplicationClient instance in registered flow,"
msgstr ""
"Il seguente frammento di codice mostra come creare l'istanza ApplicationClient in un flusso registrato."

#: ../docs/applications/libraries/java.rst:50
msgid "Using a configuration file"
msgstr ""
"Tramite file di configurazione"

#: ../docs/applications/libraries/java.rst:52
msgid "Instead of including a Properties object directly, you can use a configuration file containing the name-value pairs for Properties. If you are using a configuration file containing a Properties object, use the following code format."
msgstr ""
"Invece di includere un oggetto Proprietà direttamente, è possibile utilizzare un file di configurazione contenente le coppie nome-valore per Proprietà. Se si utilizza un file di configurazione contenente un oggetto Proprietà, utilizzare seguente il formato di codice."

#: ../docs/applications/libraries/java.rst:60
msgid "The application configuration file must be in the following format:"
msgstr ""
"Il file di configurazione dell'applicazione deve essere nel seguente formato:"

#: ../docs/applications/libraries/java.rst:77
msgid "Connecting to the IoT Platform"
msgstr ""
"Connessione a IoT Platform"

#: ../docs/applications/libraries/java.rst:79
msgid "Connect to the Watson IoT Platform by calling the connect function. The connect function takes an optional boolean parameter autoRetr (by default autoRetry is true) that controls allows the library to retry the connection when there is an MqttException. Note that the library won't retry when there is a MqttSecurityException due to incorrect device registration details passed even if the autoRetry is set to true ."
msgstr ""
"Connettersi a Watson IoT Platform chiamando la funzione connect. La funzione connect accetta il parametro booleano facoltativo autoRetr (per impostazione predefinita autoRetry è true) che consente alla libreria di riprovare la connessione in presenza di una MqttException. La libreria non ritenterà la connessione in presenza di MqttSecurityException a causa della trasmissione errata dei dettagli della registrazione del dispositivo, anche se autoRetry è impostato su true."

#: ../docs/applications/libraries/java.rst:92
msgid "After the successful connection to the IoT Platform service, the application client can perform the following operations, like subscribing to device events, subscribing to device status, publishing device events and commands."
msgstr ""
"Una volta connesso correttamente al servizio IoT Platform, il cliente dell'applicazione può eseguire le seguenti operazioni come la sottoscrizione agli eventi del dispositivo, la sottoscrizione allo stato del dispositivo, la pubblicazione degli eventi e comandi del dispositivo."

#: ../docs/applications/libraries/java.rst:99
msgid "Subscribing to device events"
msgstr ""
"Sottoscrizione a eventi del dispositivo"

#: ../docs/applications/libraries/java.rst:100
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Gli eventi sono il meccanismo tramite cui i dispositivi pubblicano i dati in IoT Platform. Il dispositivo controlla il contenuto dell'evento e assegna un nome per ogni evento inviato."

#: ../docs/applications/libraries/java.rst:102
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Quando IoT Platform riceve un evento, vengono utilizzate le credenziali della connessione in cui si è ricevuto l'evento al fine di determinare da quale dispositivo è stato inviato l'evento. Con questa architettura è impossibile per un dispositivo impersonare un altro dispositivo."

#: ../docs/applications/libraries/java.rst:104
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"Per impostazione predefinita, le applicazioni effettuano la sottoscrizione a tutti gli eventi provenienti da tutti i dispositivi connessi. Utilizzare i parametri type, id, event e msgFormat per controllare l'ambito della sottoscrizione. Un singolo client può supportare più sottoscrizioni. Gli esempi di codice di seguito forniscono esempi su come effettuare la sottoscrizione a dispositivi in base ai parametri type, id, event e msgFormat."

#: ../docs/applications/libraries/java.rst:107
msgid "To subscribe to all events from all devices"
msgstr ""
"Per effettuare la sottoscrizione a tutti gli eventi provenienti da tutti i dispositivi"

#: ../docs/applications/libraries/java.rst:115
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"Per effettuare la sottoscrizione a tutti gli eventi provenienti da tutti i dispositivi di un tipo  specifico"

#: ../docs/applications/libraries/java.rst:123
msgid "To subscribe to all events from a specific device"
msgstr ""
"Per effettuare la sottoscrizione a tutti gli eventi da uno specifico dispositivo"

#: ../docs/applications/libraries/java.rst:131
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"Per effettuare la sottoscrizione a un evento specifico proveniente da due o più dispositivi differenti"

#: ../docs/applications/libraries/java.rst:140
msgid "To subscribe to events published by a device in json format"
msgstr ""
"Per effettuare la sottoscrizione agli eventi pubblicati da un dispositivo nel formato json"

#: ../docs/applications/libraries/java.rst:152
msgid "Handling events from devices"
msgstr ""
"Gestione degli eventi dai dispositivi"

#: ../docs/applications/libraries/java.rst:153
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class which has the following properties:"
msgstr ""
"Per elaborare gli eventi ricevuti dalle sottoscrizioni è necessario registrare un metodo di callback dell'evento. I messaggi vengono restituiti come un'istanza della classe evento che ha le seguenti proprietà:"

#: ../docs/applications/libraries/java.rst:155
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - stringa (identifica in modo univoco il dispositivo tra tutti i tipi di dispositivi nell'organizzazione)"

#: ../docs/applications/libraries/java.rst:156
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - stringa"

#: ../docs/applications/libraries/java.rst:157
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - stringa"

#: ../docs/applications/libraries/java.rst:158
msgid "event.event - string"
msgstr ""
"event.event - stringa"

#: ../docs/applications/libraries/java.rst:159
msgid "event.format - string"
msgstr ""
"event.format - stringa"

#: ../docs/applications/libraries/java.rst:160
msgid "event.data - dict"
msgstr ""
"event.data - dict"

#: ../docs/applications/libraries/java.rst:161
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - dataora"

#: ../docs/applications/libraries/java.rst:163
msgid "A sample implementation of the Event callback,"
msgstr ""
"Un'implementazione di esempio del callback dell'evento."

#: ../docs/applications/libraries/java.rst:212
msgid "Once the event callback is added to the ApplicationClient, the processEvent() method is invoked whenever any event is published on the subscribed criteria, The following snippet shows how to add the Event call back into ApplicationClient instance,"
msgstr ""
"Una volta aggiunto il callback dell'evento ad ApplicationClient, il metodo processEvent() viene richiamato ogni volta che viene pubblicato un evento con i criteri a cui si è effettuata la sottoscrizione. Il seguente frammento mostra come aggiungere il callback dell'evento nell'istanza ApplicationClient."

#: ../docs/applications/libraries/java.rst:220
msgid "Similar to subscribing to device events, the application can subscribe to commands that are sent to the devices. Following code snippet shows how to subscribe to all commands to all the devices in the organization:"
msgstr ""
"In modo simile alla sottoscrizione agli eventi del dispositivo, l'applicazione può effettuare la sottoscrizione ai comandi inviati ai dispositivi. Il seguente frammento di codice mostra come effettuare la sottoscrizione a tutti i comandi inviati a tutti i dispositivi nell'organizzazione:"

#: ../docs/applications/libraries/java.rst:228
msgid "Overloaded methods are available to control the command subscription. The processCommand() method is called when a command is sent to the device that matches the command subscription."
msgstr ""
"I metodi sottoposti a overload sono disponibili per controllare la sottoscrizione ai comandi. Il metodo processCommand() viene richiamato quando al dispositivo viene inviato un comando che corrisponde alla sottoscrizione al comando."

#: ../docs/applications/libraries/java.rst:235
msgid "Subscribing to device status"
msgstr ""
"Sottoscrizione allo stato del dispositivo"

#: ../docs/applications/libraries/java.rst:236
msgid "Similar to subscribing to device events, applications can subscribe to device status, like device connect and disconnect to IoT Platform. By default, this will subscribe to status updates for all connected devices. Use the Device Type and Device Id parameters to control the scope of the subscription. A single ApplicationClient can support multiple subscriptions."
msgstr ""
"Analogamente alla sottoscrizione agli eventi del dispositivo, le applicazioni possono effettuare la sottoscrizione dello stato del dispositivo come la connessione a IoT Platform e la disconnessione. Per impostazione predefinita, questa opzione effettuerà la sottoscrizione agli aggiornamenti dello stato per tutti i dispositivi connessi. Utilizzare i parametri Tipo di dispositivo e ID dispositivo per controllare l'ambito della sottoscrizione. Un singolo ApplicationClient può supportare più sottoscrizioni."

#: ../docs/applications/libraries/java.rst:239
msgid "Subscribe to status updates for all devices"
msgstr ""
"Sottoscrivere agli aggiornamenti dello stato per tutti i dispositivi"

#: ../docs/applications/libraries/java.rst:248
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"Sottoscrivere agli aggiornamenti dello stato per tutti i dispositivi di un tipo specifico"

#: ../docs/applications/libraries/java.rst:257
msgid "Subscribe to status updates for two different devices"
msgstr ""
"Sottoscrizione agli aggiornamenti di stato per due dispositivi differenti"

#: ../docs/applications/libraries/java.rst:270
msgid "Handling status updates from devices"
msgstr ""
"Gestione degli aggiornamenti dello stato dai dispositivi"

#: ../docs/applications/libraries/java.rst:271
msgid "To process the status updates received by your subscriptions you need to register an status event callback method. The messages are returned as an instance of the Status class which contains the below mentioned properties:"
msgstr ""
"Per elaborare gli aggiornamenti dello stato ricevuti dalla sottoscrizione, è necessario registrare un metodo di callback dell'evento dello stato. I messaggi vengono restituiti come un'istanza della classe Stato che contiene le proprietà menzionate di seguito:"

#: ../docs/applications/libraries/java.rst:273
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"Le seguenti proprietà sono impostate sia per l'evento di stato \"Connetti\" che \"Disconnetti\":"

#: ../docs/applications/libraries/java.rst:275
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - stringa"

#: ../docs/applications/libraries/java.rst:276
msgid "status.protocol - string"
msgstr ""
"status.protocol - stringa"

#: ../docs/applications/libraries/java.rst:277
msgid "status.clientId - string"
msgstr ""
"status.clientId - stringa"

#: ../docs/applications/libraries/java.rst:278
msgid "status.user - string"
msgstr ""
"status.user - stringa"

#: ../docs/applications/libraries/java.rst:279
msgid "status.time - java.util.Date"
msgstr ""
"status.time - java.util.Date"

#: ../docs/applications/libraries/java.rst:280
msgid "status.action - string"
msgstr ""
"status.action - stringa"

#: ../docs/applications/libraries/java.rst:281
msgid "status.connectTime - java.util.Date"
msgstr ""
"status.connectTime - java.util.Date"

#: ../docs/applications/libraries/java.rst:282
msgid "status.port - integer"
msgstr ""
"status.port - numero intero"

#: ../docs/applications/libraries/java.rst:284
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"Le seguenti proprietà vengono impostate solo quando l'azione è \"Disconnetti\":"

#: ../docs/applications/libraries/java.rst:286
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - numero intero"

#: ../docs/applications/libraries/java.rst:287
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - numero intero"

#: ../docs/applications/libraries/java.rst:288
msgid "status.reason - string"
msgstr ""
"status.reason - stringa"

#: ../docs/applications/libraries/java.rst:289
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - numero intero"

#: ../docs/applications/libraries/java.rst:290
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - numero intero"

#: ../docs/applications/libraries/java.rst:292
msgid "A sample implementation of the Status callback,"
msgstr ""
"Un'implementazione di esempio del callback dello stato."

#: ../docs/applications/libraries/java.rst:316
msgid "Once the status callback is added to the ApplicationClient, the processDeviceStatus() method is invoked whenever any device is connected or disconnected from IoT Platform that matches the criteria, The following snippet shows how to add the status call back instance into ApplicationClient,"
msgstr ""
"Una volta che il callback di stato viene aggiunto a ApplicationClient, il metodo processDeviceStatus() è richiamato tutte le volte che un dispositivo si connette o disconnette da IoT Platform che corrisponde ai criteri. Il seguente frammento mostra in che modo aggiungere l'istanza callback di stato a ApplicationClient,"

#: ../docs/applications/libraries/java.rst:325
msgid "As similar to device status, the application can subscribe to any other application connect or disconnect status as well. Following code snippet shows how to subscribe to the application status in the organization:"
msgstr ""
"In modo simile allo stato del dispositivo, l'applicazione può effettuare la sottoscrizione allo stato di connessione o disconnessione di qualsiasi altra applicazione. Il seguente frammento di codice mostra come effettuare la sottoscrizione allo stato dell'applicazione nell'organizzazione:"

#: ../docs/applications/libraries/java.rst:333
msgid "Overloaded method is available to control the status subscription to a particular application. The processApplicationStatus() method is called whenever any application is connected or disconnected from IoT Platform that matches the criteria."
msgstr ""
"Il metodo sottoposto a overload è disponibile per controllare la sottoscrizione allo stato di una particolare applicazione. Il metodo processApplicationStatus() viene chiamato ogni volta che l'applicazione si connette o disconnette da IoT Platform che corrisponde ai criteri."

#: ../docs/applications/libraries/java.rst:340
msgid "Publishing events from devices"
msgstr ""
"Pubblicazione degli eventi dai dispositivi"

#: ../docs/applications/libraries/java.rst:341
msgid "Applications can publish events as if they originated from a Device."
msgstr ""
"Le applicazioni possono pubblicare eventi come se originassero da un dispositivo."

#: ../docs/applications/libraries/java.rst:358
msgid "Publish events using HTTP(s)"
msgstr ""
"Pubblicare gli eventi utilizzando HTTP(s)"

#: ../docs/applications/libraries/java.rst:359
msgid "Apart from MQTT, the application can publish device events to IBM Watson IoT Platform using HTTP(s) by following 3 simple steps,"
msgstr ""
"Oltre che MQTT, l'applicazione può pubblicare gli eventi del dispositivo su IBM Watson IoT Platform utilizzando HTTP(s) seguendo 3 semplici passi,"

#: ../docs/applications/libraries/java.rst:361
msgid "Construct the ApplicationClient instance using the properties file"
msgstr ""
"Creare l'istanza ApplicationClient utilizzando il file delle proprietà"

#: ../docs/applications/libraries/java.rst:362
msgid "Construct the event that needs to be published"
msgstr ""
"Creare l'evento che deve essere pubblicato"

#: ../docs/applications/libraries/java.rst:363
msgid "Specify the event name, Device Type, Device ID and publish the event using publishEventOverHTTP() method as follows,"
msgstr ""
"Specificare il nome dell'evento, il tipo di dispositivo, l'ID del dispositivo e pubblicare l'evento utilizzando il metodo publishEventOverHTTP() come mostrato di seguito."

#: ../docs/applications/libraries/java.rst:377
msgid "The complete code can be found in the application example `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"
msgstr ""
"È possibile trovare il codice completo nell'esempio dell'applicazione `HttpApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-java/blob/master/samples/iotfdeviceclient/src/com/ibm/iotf/sample/client/application/HttpApplicationDeviceEventPublish.java>`__"

#: ../docs/applications/libraries/java.rst:379
msgid "Based on the settings in the properties file, the publishEventOverHTTP() method either publishes the event in Quickstart or in Registered flow. When the Organization ID mentioned in the properties file is quickstart, publishEventOverHTTP() method publishes the event to IoT Platform quickstart service and publishes the event in plain HTTP format. But when valid registered organization is mentioned in the properties file, this method always publishes the event in HTTPS (HTTP over SSL), so all the communication is secured."
msgstr ""
"In base alle impostazioni nel file delle proprietà, il metodo publishEventOverHTTP() pubblica l'evento in Quickstart o nel flusso registrato. Quando l'ID organizzazione indicato nel file delle proprietà è Quickstart, il metodo publishEventOverHTTP() pubblica l'evento nel servizio IoT Platform Quickstart e lo pubblica in formato HTTP normale. Ma quando nel file delle proprietà viene menzionata un'organizzazione registrata valida, questo metodo pubblica sempre l'evento in HTTPS (HTTP over SSL), in modo da proteggere tutte le comunicazioni."

#: ../docs/applications/libraries/java.rst:381
msgid "The event in HTTP(s) is published at most once Quality of Service, so the application needs to implement the retry logic when there is an error."
msgstr ""
"L'evento in HTTP(s) viene pubblicato al massimo una volta su Quality of Service, pertanto quando si verifica un errore l'applicazione deve implementare la logica retry."

#: ../docs/applications/libraries/java.rst:388
msgid "Publishing commands to devices"
msgstr ""
"Pubblicazione dei comandi sui dispositivi"

#: ../docs/applications/libraries/java.rst:389
msgid "Applications can publish commands to connected devices."
msgstr ""
"Le applicazioni possono pubblicare i comandi sui dispositivi connessi."

#: ../docs/applications/libraries/java.rst:408
msgid "Examples"
msgstr ""
"Esempi:"

#: ../docs/applications/libraries/java.rst:409
msgid "`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - A sample application that shows how to publish device events."
msgstr ""
"`MQTTApplicationDeviceEventPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/MQTTApplicationDeviceEventPublish.java>`__ - Un'applicazione di esempio che illustra come pubblicare gli eventi del dispositivo."

#: ../docs/applications/libraries/java.rst:410
msgid "`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - A sample application that shows how to publish a command to a device."
msgstr ""
"`RegisteredApplicationCommandPublish <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationCommandPublish.java>`__ - Un'applicazione di esempio che mostra come pubblicare un comando su un dispositivo."

#: ../docs/applications/libraries/java.rst:411
msgid "`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - A sample application that shows how to subscribe for various events like, device events, device commands, device status and application status."
msgstr ""
"`RegisteredApplicationSubscribeSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/RegisteredApplicationSubscribeSample.java>`__ - Un'applicazione di esempio che mostra come effettuare la sottoscrizione per diversi eventi, come eventi del dispositivo, comandi del dispositivo, stato del dispositivo e stato dell'applicazione."

#: ../docs/applications/libraries/java.rst:412
msgid "`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - A sample application that shows how to build a scalable application which will load balance messages across multiple instances of the application."
msgstr ""
"`SharedSubscriptionSample <https://github.com/ibm-messaging/iot-application-samples/blob/master/java/standalone-samples/src/main/java/com/ibm/iotf/sample/client/application/SharedSubscriptionSample.java>`__ - Un'applicazione di esempio che mostra come creare un'applicazione scalabile che eseguirà il bilanciamento del carico dei messaggi tra più istanze dell'applicazione."

#: ../docs/applications/libraries/java.rst:413
msgid "`Backup and Restore sample <https://github.com/ibm-messaging/iot-backup-restore-sample>`__ - A sample that shows how to backup the device configuration in Cloudant NoSQL DB and restore the same later."
msgstr ""
"`Esempio di backup e ripristino <https://github.com/ibm-messaging/iot-backup-restore-sample>`__ - Un esempio che mostra come eseguire il backup della configurazione del dispositivo in Cloudant NoSQL DB e ripristinarlo successivamente."

