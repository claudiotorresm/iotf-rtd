# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/mbedcpp.rst:2
msgid "mBed C++ for Device Developers"
msgstr ""
"適用於裝置開發人員的 mBed C++"

#: ../docs/devices/libraries/mbedcpp.rst:4
msgid "See `ibmiotf <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTF/>`_ on `developer.mbed.org <https://developer.mbed.org/>`_"
msgstr ""
"請參閱 `developer.mbed.org <https://developer.mbed.org/>`_ 上的 `ibmiotf <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTF/>`_"

#: ../docs/devices/libraries/mbedcpp.rst:6
msgid "The `mBed C++ client library <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTF/>`_ can be used to connect `mBed devices <https://www.mbed.com/en/>`__ like `LPC1768 <https://developer.mbed.org/platforms/mbed-LPC1768/>`__, `FRDM-K64F <https://developer.mbed.org/platforms/FRDM-K64F/>`__ and etc.. to the IoT Platform Cloud service with ease. Although the library uses C++, it still avoids dynamic memory allocations and use of STL functions as the mBed devices sometimes have idiosyncratic memory models which make porting difficult. In any case, the library allows one to make memory use as predictable as possible."
msgstr ""
"`mBed C++ 用戶端程式庫 <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTF/>`_ 可用來將 `mBed 裝置 <https://www.mbed.com/en/>`__（例如 `LPC1768 <https://developer.mbed.org/platforms/mbed-LPC1768/>`__、`FRDM-K64F <https://developer.mbed.org/platforms/FRDM-K64F/>`__ 等等）輕鬆地連接至「IoT Platform 雲端」服務。雖然此程式庫使用 C++，但它仍會避免動態記憶體配置及使用 STL 函數，因為 mBed 裝置有時會有導致難以移轉的特殊記憶體模型。無論如何，此程式庫都可讓使用者將記憶體的使用盡可能符合預期。"

#: ../docs/devices/libraries/mbedcpp.rst:9
msgid "Dependencies"
msgstr ""
"相依關係"

#: ../docs/devices/libraries/mbedcpp.rst:11
msgid "`Eclipse Paho MQTT library <https://developer.mbed.org/teams/mqtt/code/MQTT/>`__ - Provides a MQTT client library for mBed devices, check `here <http://www.eclipse.org/paho/clients/c/embedded/>`__ for more information."
msgstr ""
"`Eclipse Paho MQTT 程式庫<https://developer.mbed.org/teams/mqtt/code/MQTT/>`__ - 提供適用於 mBed 裝置的 MQTT 用戶端程式庫；如需相關資訊，請參閱`這裡 <http://www.eclipse.org/paho/clients/c/embedded/>`__。"

#: ../docs/devices/libraries/mbedcpp.rst:12
msgid "`EthernetInterface library <https://developer.mbed.org/users/mbed_official/code/EthernetInterface/>`__ - A mBed IP library over Ethernet."
msgstr ""
"`EthernetInterface 程式庫<https://developer.mbed.org/users/mbed_official/code/EthernetInterface/>`__ - 透過乙太網路的 mBed IP 程式庫。"

#: ../docs/devices/libraries/mbedcpp.rst:15
msgid "How to use the library"
msgstr ""
"如何使用程式庫"

#: ../docs/devices/libraries/mbedcpp.rst:16
msgid "Use the `mBed Compiler <https://developer.mbed.org/compiler/>`__ to create your applications using this mBed C++ IBMIoTF Client Library. The mBed Compiler provides a lightweight online C/C++ IDE that is pre-configured to let you quickly write programs, compile and download them to run on your mbed Microcontroller. In fact, you don't have to install or set up anything to get running with mbed."
msgstr ""
"使用 `mBed 編譯器<https://developer.mbed.org/compiler/>`__，利用此 mBed C++ IBMIoTF 用戶端程式庫建立您的應用程式。mBed 編譯器提供一個預先配置的輕量型線上 C/C++ IDE，讓您快速撰寫、編譯及下載程式，以在您的 mbed 微控制器上執行。事實上，您無須進行任何安裝或設定，即可使用 mbed 執行。"

#: ../docs/devices/libraries/mbedcpp.rst:19
msgid "Refer to the step by step `mBed C++ Client Library for IBM IoT Platform Recipe <https://developer.ibm.com/recipes/tutorials/mbed-c-client-library-for-ibm-iot-foundation/>`__ that shows how one can use this library to connect an ARM mBed NXP LPC 1768 microcontroller to the IoT Platform."
msgstr ""
"請參閱 `mBed C++ Client Library for IBM IoT Platform Recipe <https://developer.ibm.com/recipes/tutorials/mbed-c-client-library-for-ibm-iot-foundation/>`__ 中的逐步說明，其中顯示如何使用此程式庫將 ARM mBed NXP LPC 1768 微控制器連接至 IoT Platform。"

#: ../docs/devices/libraries/mbedcpp.rst:22
msgid "Constructor"
msgstr ""
"建構子"

#: ../docs/devices/libraries/mbedcpp.rst:24
msgid "The constructor builds the client instance, and accepts the following parameters:"
msgstr ""
"建構子可建置用戶端實例，並接受下列參數："

#: ../docs/devices/libraries/mbedcpp.rst:26
msgid "org - Your organization ID. (This is a required field. In case of quickstart flow, provide org as quickstart.)"
msgstr ""
"org - 組織 ID。（這是必要欄位。若是有 Quickstart 流程，則提供 org 作為 Quickstart。）"

#: ../docs/devices/libraries/mbedcpp.rst:27
msgid "type - The type of your device. (This is a required field.)"
msgstr ""
"type - 裝置的類型。（這是必要欄位。）"

#: ../docs/devices/libraries/mbedcpp.rst:28
msgid "id - The ID of your device. (This is a required field."
msgstr ""
"id - 裝置的 ID。（這是必要欄位。"

#: ../docs/devices/libraries/mbedcpp.rst:29
msgid "auth-method - Method of authentication (This is an optional field, needed only for registered flow and the only value currently supported is \"token\")."
msgstr ""
"auth-method - 鑑別方法（這是選用欄位，只在登錄流程時需要且目前唯一支援的值是 \"token\"）。"

#: ../docs/devices/libraries/mbedcpp.rst:30
msgid "auth-token - API key token (This is an optional field, needed only for registered flow)."
msgstr ""
"auth-token - API 金鑰記號（這是選用欄位，只在登錄流程時需要）。"

#: ../docs/devices/libraries/mbedcpp.rst:32
msgid "These arguments create definitions which are used to interact with the IoT Platform service."
msgstr ""
"這些引數會建立用來與 IoT Platform 服務互動的定義。"

#: ../docs/devices/libraries/mbedcpp.rst:34
msgid "The following code block shows how to create a DeviceClient instance to interact with the IoT Platform quickstart service."
msgstr ""
"下列程式碼區塊顯示如何建立與 IoT Platform Quickstart 服務互動的 DeviceClient 實例。"

#: ../docs/devices/libraries/mbedcpp.rst:58
msgid "As shown above, if the device id is not specified, the DeviceClient uses the MAC address of the device as device id and connects to the IoT Platform. The device code can use getDeviceId() method to retrieve the device id from the DeviceClient instance."
msgstr ""
"如上所示，如果未指定裝置 ID，DeviceClient 將會使用裝置的 MAC 位址作為裝置 ID，並連接至 IoT Platform。裝置程式碼可使用 getDeviceId() 方法從 DeviceClient 實例擷取裝置 ID。"

#: ../docs/devices/libraries/mbedcpp.rst:60
msgid "The following code block shows how to create a DeviceClient instance to interact with the IoT Platform Registered organization."
msgstr ""
"下列程式碼區塊顯示如何建立與 IoT Platform 已登錄組織互動的 DeviceClient 實例。"

#: ../docs/devices/libraries/mbedcpp.rst:82
msgid "Connecting to the IoT Platform"
msgstr ""
"連接至 IoT Platform"

#: ../docs/devices/libraries/mbedcpp.rst:84
msgid "The device can connect to the IoT Platform by calling the connect function on the DeviceClient instance."
msgstr ""
"裝置可透過對 DeviceClient 實例呼叫 connect 函數來連接至 IoT Platform。"

#: ../docs/devices/libraries/mbedcpp.rst:98
msgid "After the successful connection, the device can publish events to the IoT Platform and listen for commands."
msgstr ""
"在成功連線後，裝置可以將事件發佈到 IoT Platform，並接聽指令。"

#: ../docs/devices/libraries/mbedcpp.rst:100
msgid "Also, the device can query the status of the connection using the isConnected() method as follows,"
msgstr ""
"另外，裝置也可以使用 isConnected() 方法來查詢連線的狀態，如下所示。"

#: ../docs/devices/libraries/mbedcpp.rst:114
msgid "Publishing events"
msgstr ""
"發佈事件"

#: ../docs/devices/libraries/mbedcpp.rst:115
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是裝置藉以將資料發佈到 IoT Platform 的機制。裝置可控制事件的內容，並為它傳送的每一個事件指派一個名稱。"

#: ../docs/devices/libraries/mbedcpp.rst:117
msgid "When an event is received by the IBM IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"當 IBM IoT Platform 接收事件時，會使用接收事件的連線認證來判斷是哪個裝置傳送了事件。使用此架構，裝置就不可能假冒成另一個裝置。"

#: ../docs/devices/libraries/mbedcpp.rst:119
msgid "Events can be published at any of the three `quality of service levels <../messaging/mqtt.html#/>`__ defined by the MQTT protocol.  By default events will be published as qos level 0."
msgstr ""
"事件可使用 MQTT 通訊協定所定義的三個`服務品質等級<../messaging/mqtt.html#/>`__的其中一個來發佈。依預設，事件會發佈為 qos 等級 0。"

#: ../docs/devices/libraries/mbedcpp.rst:122
msgid "Publish event using default quality of service"
msgstr ""
"使用預設服務品質發佈事件"

#: ../docs/devices/libraries/mbedcpp.rst:124
msgid "The below sample shows how to publish various data points of LPC1768 like x,y & z axis, joystick position, current temperature reading and etc.. to IoT Platform in JSON format."
msgstr ""
"下列範例顯示如何將 LPC1768 的不同資料點（例如 x、y 和 z 軸、搖桿位置、現行溫度讀數等）以 JSON 格式發佈至 IoT Platform。"

#: ../docs/devices/libraries/mbedcpp.rst:142
#: ../docs/devices/libraries/mbedcpp.rst:238
msgid "The complete sample can be found `here <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTClientLibrarySample/file/e58533b6bc6b/src/Main.cpp>`__."
msgstr ""
"完整範例位於`這裡<https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTClientLibrarySample/file/e58533b6bc6b/src/Main.cpp>`__。"

#: ../docs/devices/libraries/mbedcpp.rst:145
msgid "Publish event using user-defined quality of service"
msgstr ""
"利用使用者定義的服務品質發佈事件"

#: ../docs/devices/libraries/mbedcpp.rst:147
msgid "Events can be published at higher MQTT quality of service levels, but these events may take slower than QoS level 0, because of the extra confirmation of receipt. Also quickstart flow allows only Qos of 0."
msgstr ""
"事件可以用更高的 MQTT 服務品質等級發佈，但這些事件的速度比服務品質等級 0 更慢，因為要進行額外的接收確認。同樣地，Quickstart 流程也只允許服務品質 0。"

#: ../docs/devices/libraries/mbedcpp.rst:169
msgid "Handling the connection lost error during the event publish"
msgstr ""
"處理事件發佈期間失去連線的錯誤"

#: ../docs/devices/libraries/mbedcpp.rst:171
msgid "When the publishEvent() method returns false, one can check the status of the connection and call reConnect() if the connection is lost,"
msgstr ""
"當 publishEvent() 方法傳回 false 時，您可以檢查連線的狀態。如果失去連線，請呼叫 reConnect()。"

#: ../docs/devices/libraries/mbedcpp.rst:189
msgid "The library does not store the events published during the unconnected state, and hence, the device needs to call the publishEvent() method again to send those events once the connection is reestablished."
msgstr ""
"程式庫不會儲存未連接狀態期間發佈的事件，因此，重新建立連線之後，裝置就需要重新呼叫 publishEvent() 方法來傳送那些事件。"

#: ../docs/devices/libraries/mbedcpp.rst:195
msgid "Handling commands"
msgstr ""
"處理指令"

#: ../docs/devices/libraries/mbedcpp.rst:196
msgid "When the device client connects, it automatically subscribes to any commands for this device. To process specific commands you need to register a command callback method. The messages are returned as an instance of the Command class which has the following properties:"
msgstr ""
"當裝置用戶端連接時，會自動訂閱此裝置的任何指令。若要處理特定指令，您必須登錄指令回呼方法。會以「指令」類別的實例傳回訊息，且此類別具有下列內容："

#: ../docs/devices/libraries/mbedcpp.rst:199
msgid "command - name of the command invoked"
msgstr ""
"command - 呼叫的指令名稱"

#: ../docs/devices/libraries/mbedcpp.rst:200
msgid "format - e.g json, xml"
msgstr ""
"格式 - 例如 json、xml"

#: ../docs/devices/libraries/mbedcpp.rst:201
msgid "payload"
msgstr ""
"內容"

#: ../docs/devices/libraries/mbedcpp.rst:203
msgid "Following code defines a sample command callback function that processes the LED blink interval command from the application and adds the same to the DeviceClient instance."
msgstr ""
"下列程式碼所定義的範例指令回呼函數會處理來自應用程式的 LED 閃爍間隔指令，並將相同的指令新增至 DeviceClient 實例。"

#: ../docs/devices/libraries/mbedcpp.rst:240
msgid "The 'client.yield()' function must be called periodically to receive commands."
msgstr ""
"必須定期呼叫 'client.yield()' 函數來接收指令。"

#: ../docs/devices/libraries/mbedcpp.rst:245
msgid "Disconnect Client"
msgstr ""
"中斷連接用戶端"

#: ../docs/devices/libraries/mbedcpp.rst:247
msgid "To disconnect the client and release the connections, run the following code snippet."
msgstr ""
"若要中斷連接用戶端並釋出連線，請執行下列程式碼 Snippet。"

#: ../docs/devices/libraries/mbedcpp.rst:258
msgid "Samples"
msgstr ""
"範例"

#: ../docs/devices/libraries/mbedcpp.rst:260
msgid "`IBMIoTClientLibrarySample <https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTClientLibrarySample/>`__ - A Sample code that showcases how to use IBMIoTF client library to connect the mbed LPC1768 or FRDM-K64F devices to the IBM Internet of Things Cloud service."
msgstr ""
"`IBMIoTClientLibrarySample<https://developer.mbed.org/teams/IBM_IoT/code/IBMIoTClientLibrarySample/>`__ - 一個範例程式碼，顯示如何使用 IBMIoTF 用戶端程式庫將 mbed LPC1768 或 FRDM-K64F 裝置連接至 IBM Internet of Things 雲端服務。"

