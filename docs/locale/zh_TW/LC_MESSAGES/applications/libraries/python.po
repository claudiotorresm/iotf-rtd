# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/python.rst:2
msgid "Python for Application Developers"
msgstr ""
"適用於應用程式開發人員的 Python"

#: ../docs/applications/libraries/python.rst:4
msgid "See `iot-python <https://github.com/ibm-messaging/iot-python>`_ in GitHub"
msgstr ""
"請參閱 GitHub 中的 `iot-python <https://github.com/ibm-messaging/iot-python>`_"

#: ../docs/applications/libraries/python.rst:5
msgid "See `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ on PyPi"
msgstr ""
"請參閱 PyPi 上的 `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_"

#: ../docs/applications/libraries/python.rst:8
msgid "Constructor"
msgstr ""
"建構子"

#: ../docs/applications/libraries/python.rst:10
msgid "The constructor builds the client instance, and accepts an options dict containing the following definitions:"
msgstr ""
"建構子可建置用戶端實例，並接受包含下列定義的選項 dict："

#: ../docs/applications/libraries/python.rst:12
msgid "``org`` - Your organization ID."
msgstr ""
"``org`` - 組織 ID。"

#: ../docs/applications/libraries/python.rst:13
msgid "``id`` - The unique ID of your application within your organization."
msgstr ""
"``id`` - 組織內應用程式的唯一 ID。"

#: ../docs/applications/libraries/python.rst:14
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``apikey``)."
msgstr ""
"``auth-method`` - 鑑別的方法（目前唯一支援的值是 ``apikey``）。"

#: ../docs/applications/libraries/python.rst:15
msgid "``auth-key`` - API key (required if auth-method is ``apikey``)."
msgstr ""
"``auth-key`` - API 金鑰（如果 auth-method 為 ``apikey`` 則需要）。"

#: ../docs/applications/libraries/python.rst:16
msgid "``auth-token`` - API key token (required if auth-method is ``apikey``)."
msgstr ""
"``auth-token`` - API 金鑰記號（如果 auth-method 為 ``apikey`` 則需要）。"

#: ../docs/applications/libraries/python.rst:18
msgid "If no options dict is provided, the client will connect to the IoT Platform Quickstart, and default to an unregistered device. The options dict creates definitions which are used to interact with the IoT Platform module."
msgstr ""
"如果未提供選項字典，用戶端將連接至 IoT Platform Quickstart，並預設為已取消登錄的裝置。選項字典會建立用來與 IoT Platform 模組互動的定義。"

#: ../docs/applications/libraries/python.rst:37
msgid "Using a configuration file"
msgstr ""
"使用配置檔"

#: ../docs/applications/libraries/python.rst:39
msgid "If you are not using an options dict as shown above, you include a configuration file containing an options dict. If you are using a configuration file containing an options dict, use the following code format."
msgstr ""
"如果您未使用上述的選項 dict，請包括一個含有選項 dict 的配置檔。如果使用的配置檔包含選項 dict，請使用下列程式碼格式。"

#: ../docs/applications/libraries/python.rst:50
msgid "The application configuration file must be in the following format:"
msgstr ""
"應用程式配置檔必須為下列格式："

#: ../docs/applications/libraries/python.rst:66
msgid "API calls"
msgstr ""
"API 呼叫"

#: ../docs/applications/libraries/python.rst:68
msgid "Each method in the APIClient responds with either a valid response (JSON or boolean) in the case of success or IoTFCReSTException in the case of failure. The IoTFCReSTException contains the following properties that application can parse to get more information about the failure."
msgstr ""
"APIClient 中的每個方法在成功時會以有效回應（JSON 或布林）回應，在失敗時則以 IoTFCReSTException 回應。IoTFCReSTException 包含下列可讓應用程式剖析以取得失敗之相關資訊的內容。"

#: ../docs/applications/libraries/python.rst:70
msgid "httpcode - HTTP Status Code"
msgstr ""
"httpcode - HTTP 狀態碼"

#: ../docs/applications/libraries/python.rst:71
msgid "message - Exception message containing the reason for the failure"
msgstr ""
"message - 包含失敗原因的異常狀況訊息"

#: ../docs/applications/libraries/python.rst:72
msgid "response - JsonElement containing the partial response if any otherwise null"
msgstr ""
"response - 包含部分回應的 JsonElement（如果有），否則為空值"

#: ../docs/applications/libraries/python.rst:74
msgid "So in the case of failure, application needs to parse the response to see if the action is partially successful or not."
msgstr ""
"因此，如果失敗，應用程式必須剖析回應，以瞭解動作是否已部分成功。"

#: ../docs/applications/libraries/python.rst:81
msgid "Subscribing to device events"
msgstr ""
"訂閱裝置事件"

#: ../docs/applications/libraries/python.rst:82
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是裝置藉以將資料發佈到 IoT Platform 的機制。裝置可控制事件的內容，並為它傳送的每一個事件指派一個名稱。"

#: ../docs/applications/libraries/python.rst:84
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"當 IoT Platform 接收事件時，會使用接收事件的連線認證來判斷是哪個裝置傳送了事件。使用此架構，裝置就不可能假冒成另一個裝置。"

#: ../docs/applications/libraries/python.rst:86
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"依預設，應用程式會訂閱所有已連接裝置的所有事件。請使用類型、ID、事件及 msgFormat 參數來控制訂閱的範圍。單一用戶端可支援多個訂閱。下列程式碼範例提供如何根據裝置類型、ID、事件及 msgFormat 參數來訂閱裝置的範例。"

#: ../docs/applications/libraries/python.rst:90
msgid "To subscribe to all events from all devices"
msgstr ""
"訂閱所有裝置的所有事件"

#: ../docs/applications/libraries/python.rst:104
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"訂閱特定類型之所有裝置的所有事件"

#: ../docs/applications/libraries/python.rst:118
msgid "To subscribe to a specific event from all devices"
msgstr ""
"訂閱所有裝置的特定事件"

#: ../docs/applications/libraries/python.rst:132
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"訂閱兩個以上不同裝置的特定事件"

#: ../docs/applications/libraries/python.rst:147
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"訂閱裝置已發佈且為 Json 格式的所有事件"

#: ../docs/applications/libraries/python.rst:164
msgid "Handling events from devices"
msgstr ""
"處理裝置的事件"

#: ../docs/applications/libraries/python.rst:165
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class:"
msgstr ""
"若要處理訂閱所接收的事件，您需要登錄事件回呼方法。會以 Event 類別的實例傳回訊息："

#: ../docs/applications/libraries/python.rst:167
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - 字串（可在組織中所有裝置類型之間唯一識別該裝置）"

#: ../docs/applications/libraries/python.rst:168
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - 字串"

#: ../docs/applications/libraries/python.rst:169
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - 字串"

#: ../docs/applications/libraries/python.rst:170
msgid "event.event - string"
msgstr ""
"event.event - 字串"

#: ../docs/applications/libraries/python.rst:171
msgid "event.format - string"
msgstr ""
"event.format - 字串"

#: ../docs/applications/libraries/python.rst:172
msgid "event.data - dict"
msgstr ""
"event.data - dict"

#: ../docs/applications/libraries/python.rst:173
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - 日期時間"

#: ../docs/applications/libraries/python.rst:196
msgid "Subscribing to device status"
msgstr ""
"訂閱裝置狀態"

#: ../docs/applications/libraries/python.rst:197
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"依預設，這會訂閱所有連線裝置的狀態更新。請使用 type 和 id 參數來控制訂閱的範圍。單一用戶端可支援多個訂閱。"

#: ../docs/applications/libraries/python.rst:200
msgid "Subscribe to status updates for all devices"
msgstr ""
"訂閱所有裝置的狀態更新項目"

#: ../docs/applications/libraries/python.rst:214
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"訂閱特定類型的所有裝置的狀態更新項目"

#: ../docs/applications/libraries/python.rst:228
msgid "Subscribe to status updates for two different devices"
msgstr ""
"訂閱兩個不同裝置的狀態更新項目"

#: ../docs/applications/libraries/python.rst:246
msgid "Handling status updates from devices"
msgstr ""
"處理裝置的狀態更新項目"

#: ../docs/applications/libraries/python.rst:247
msgid "To process the status updates received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Status class:"
msgstr ""
"若要處理訂閱所接收的狀態更新，您需要登錄事件回呼方法。會以 Status 類別的實例傳回訊息："

#: ../docs/applications/libraries/python.rst:249
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"已同時對「連接」和「中斷連接」狀態事件設定了下列內容："

#: ../docs/applications/libraries/python.rst:251
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - 字串"

#: ../docs/applications/libraries/python.rst:252
msgid "status.protocol - string"
msgstr ""
"status.protocol - 字串"

#: ../docs/applications/libraries/python.rst:253
msgid "status.clientId - string"
msgstr ""
"status.clientId - 字串"

#: ../docs/applications/libraries/python.rst:254
msgid "status.user - string"
msgstr ""
"status.user - 字串"

#: ../docs/applications/libraries/python.rst:255
msgid "status.time - datetime"
msgstr ""
"status.time - 日期時間"

#: ../docs/applications/libraries/python.rst:256
msgid "status.action - string"
msgstr ""
"status.action - 字串"

#: ../docs/applications/libraries/python.rst:257
msgid "status.connectTime - datetime"
msgstr ""
"status.connectTime - 日期時間"

#: ../docs/applications/libraries/python.rst:258
msgid "status.port - integer"
msgstr ""
"status.port - 整數"

#: ../docs/applications/libraries/python.rst:260
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"只有當動作為「中斷連接」時，才會設定下列內容："

#: ../docs/applications/libraries/python.rst:262
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - 整數"

#: ../docs/applications/libraries/python.rst:263
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - 整數"

#: ../docs/applications/libraries/python.rst:264
msgid "status.reason - string"
msgstr ""
"status.reason - 字串"

#: ../docs/applications/libraries/python.rst:265
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - 整數"

#: ../docs/applications/libraries/python.rst:266
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - 整數"

#: ../docs/applications/libraries/python.rst:292
msgid "Publishing events from devices"
msgstr ""
"從裝置發佈事件"

#: ../docs/applications/libraries/python.rst:293
msgid "Applications can publish events as if they originated from a Device"
msgstr ""
"應用程式可當成事件是從裝置產生來發佈事件"

#: ../docs/applications/libraries/python.rst:311
msgid "Publishing commands to devices"
msgstr ""
"對裝置發佈指令"

#: ../docs/applications/libraries/python.rst:312
msgid "Applications can publish commands to connected devices"
msgstr ""
"應用程式可對連接的裝置發佈指令"

#: ../docs/applications/libraries/python.rst:330
msgid "Organization details"
msgstr ""
"組織詳細資料"

#: ../docs/applications/libraries/python.rst:332
msgid "Applications can use the ``getOrganizationDetails()`` method to retrieve the details about the configuration of the organization."
msgstr ""
"應用程式可使用 ``getOrganizationDetails()`` 方法來擷取組織配置的詳細資料。"

#: ../docs/applications/libraries/python.rst:347
msgid "Refer to the Organization Configuration section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the request & response model and http status code."
msgstr ""
"如需要求和回應模型與 HTTP 狀態碼的相關資訊，請參閱 `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ 的「組織配置」區段。"

#: ../docs/applications/libraries/python.rst:355
msgid "Bulk device operations"
msgstr ""
"大量裝置作業"

#: ../docs/applications/libraries/python.rst:357
msgid "Applications can use bulk operations to get, add or remove devices in bulk."
msgstr ""
"應用程式可以使用大量作業，來大量取得、新增或移除裝置。"

#: ../docs/applications/libraries/python.rst:359
msgid "Refer to the Bulk Operations section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"如需查詢參數清單、要求和回應模型與 HTTP 狀態碼的相關資訊，請參閱 `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ 的「大量作業」區段。"

#: ../docs/applications/libraries/python.rst:362
msgid "Retrieve device information"
msgstr ""
"擷取裝置資訊"

#: ../docs/applications/libraries/python.rst:364
msgid "Bulk device information can be retrieved using the ``getAllDevices()`` method. This method retrieves information on all registered devices in the organization, each request can contain a maximum of 512KB."
msgstr ""
"可使用 ``getAllDevices()`` 方法來擷取大量裝置資訊。此方法會擷取組織中所有已登錄裝置的資訊，每個要求最多可包含 512KB。"

#: ../docs/applications/libraries/python.rst:367
msgid "The response contains parameters required by the application to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further calls, for example, the ``_bookmark`` element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"回應包含應用程式要從回應中擷取字典 *results*，以取得傳回的裝置陣列所需的參數。若要執行進一步的呼叫，則需要回應中的其他參數，例如，``_bookmark`` 元素可用來翻看結果。在不指定書籤的情況下發出第一個要求，然後取得在回應中傳回的書籤，並將其提供在對下一頁的要求上。重複這些步驟，直到沒有書籤而指出結果集的結尾為止。每個要求都必須對其他參數使用完全相同的值，否則結果將會是未定義。"

#: ../docs/applications/libraries/python.rst:389
msgid "Add Devices in bulk"
msgstr ""
"大量新增裝置"

#: ../docs/applications/libraries/python.rst:391
msgid "The ``addMultipleDevices()`` method can be used to add one or more devices to your IoT Platform organization, the maximum size of a request is set to 512KB.  The response will contain the generated authentication tokens for each added device. These authentication tokens must be recorded when processing the response, as lost authentication tokens cannot be retrieved."
msgstr ""
"``addMultipleDevices()`` 方法可用來將一或多個裝置新增至您的 IoT Platform 組織，要求的大小上限會設為 512KB。回應將包含為每個新增的裝置產生的鑑別記號。這些鑑別記號必須在處理回應時記錄下來，因為遺失的鑑別記號將無法擷取。"

#: ../docs/applications/libraries/python.rst:416
msgid "Delete Devices in bulk"
msgstr ""
"大量刪除裝置"

#: ../docs/applications/libraries/python.rst:418
msgid "The ``deleteMultipleDevices()`` method can be used to delete multiple devices from an IoT Platform organization, each request can contain a maximum of 512KB."
msgstr ""
"``deleteMultipleDevices()`` 方法可用來從 IoT Platform 組織中刪除多個裝置，每個要求最多可包含 512KB。"

#: ../docs/applications/libraries/python.rst:443
msgid "Device Type Operations"
msgstr ""
"裝置類型作業"

#: ../docs/applications/libraries/python.rst:445
msgid "Device types can be used as templates for adding device information to devices as they are added to your organization. Applications can use the IoT Platform API to list, create, delete, view, or update device types in your organization."
msgstr ""
"裝置類型可作為裝置新增至您的組織時，用來將裝置資訊新增至這些裝置的範本。應用程式可使用 IoT Platform API 來列出、建立、刪除、檢視或更新您組織中的裝置類型。"

#: ../docs/applications/libraries/python.rst:449
msgid "Refer to the Device Types section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ documentation for information about the list of query parameters, the request & response model, and http status codes."
msgstr ""
"如需查詢參數清單、要求和回應模型與 HTTP 狀態碼的相關資訊，請參閱 `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ 文件的「裝置類型」區段。"

#: ../docs/applications/libraries/python.rst:454
msgid "Get all Device Types"
msgstr ""
"取得所有裝置類型"

#: ../docs/applications/libraries/python.rst:456
msgid "The ``getAllDeviceTypes()`` method can be used to retrieve all device types in your IoT Platform organization. The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"``getAllDeviceTypes()`` 方法可用來擷取您的 IoT Platform 組織中的所有裝置類型。回應包含應用程式要從回應中擷取字典 *results*，以取得傳回的裝置陣列所需的參數。要執行進一步的呼叫則需要回應中的其他參數，例如，*_bookmark* 元素可用來翻看結果。在不指定書籤的情況下發出第一個要求，然後取得在回應中傳回的書籤，並將其提供在對下一頁的要求上。重複這些步驟，直到沒有書籤而指出結果集的結尾為止。每個要求都必須對其他參數使用完全相同的值，否則結果將會是未定義。"

#: ../docs/applications/libraries/python.rst:485
msgid "Add a Device Type"
msgstr ""
"新增裝置類型"

#: ../docs/applications/libraries/python.rst:487
msgid "The ``addDeviceType()`` method can be used to register a device type to IoT Platform. In each request, you must first define the device information, and device metadata elements which you want to be applied to all devices of this type. The device information element is comprised of several variables, including, serial number, manufacturer, model, class, description, firmware and hardware versions, and descriptive location. The metadata element is comprised of custom variables and values which can be defined by the user."
msgstr ""
"``addDeviceType()`` 方法可用來將裝置類型登錄至 IoT Platform。在每個要求中，您必須先定義您要對所有屬於此類型的裝置套用的裝置資訊及裝置 meta 資料元素。裝置資訊元素由數個變數所組成，包括序號、製造商、機型、類別、說明、韌體和硬體版本以及敘述性位置。meta 資料元素由可由使用者定義的自訂變數和值組成。"

#: ../docs/applications/libraries/python.rst:523
msgid "Delete a Device Type"
msgstr ""
"刪除裝置類型"

#: ../docs/applications/libraries/python.rst:525
msgid "The ``deleteDeviceType()`` method can be used to delete a device type from your IoT Platform organization."
msgstr ""
"``deleteDeviceType()`` 方法可用來從您的 IoT Platform 組織中刪除裝置類型。"

#: ../docs/applications/libraries/python.rst:542
msgid "Get a Device Type"
msgstr ""
"取得裝置類型"

#: ../docs/applications/libraries/python.rst:544
msgid "The ``getDeviceType()`` method retrieves information on a given device type. The ``typeId`` of the device type you wish to retrieve must be used as a parameter"
msgstr ""
"``getDeviceType()`` 方法可擷取給定裝置類型上的資訊。必須使用您要擷取之裝置類型的 ``typeId`` 作為參數。"

#: ../docs/applications/libraries/python.rst:561
msgid "Update a Device Type"
msgstr ""
"更新裝置類型"

#: ../docs/applications/libraries/python.rst:563
msgid "The ``updateDeviceType()`` method can be used to modify the properties of a device type. When using this method, several parameters must be defined. Firstly, the ``typeId`` of the device type to be updated must be specified, then the ``description``, ``deviceInfo``, and ``metadata`` elements."
msgstr ""
"``updateDeviceType()`` 方法可用來修改裝置類型的內容。使用此方法時，必須定義數個參數。首先，必須指定要更新之裝置類型的 ``typeId``，然後指定 ``description``、``deviceInfo`` 和 ``metadata`` 元素。"

#: ../docs/applications/libraries/python.rst:599
msgid "Device operations"
msgstr ""
"裝置作業"

#: ../docs/applications/libraries/python.rst:601
msgid "Device operations made available through the API include listing, adding, removing, viewing, updating, viewing location and viewing  device management information of devices in an IoT Platform organization."
msgstr ""
"透過 API 來啟用的裝置作業，包括對 IoT Platform 組織中的裝置進行列出、新增、移除、檢視、更新、檢視位置，以及檢視裝置管理資訊。"

#: ../docs/applications/libraries/python.rst:603
msgid "Refer to the Device section of the `IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"如需查詢參數清單、要求和回應模型與 HTTP 狀態碼的相關資訊，請參閱 `IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ 的「裝置」區段。"

#: ../docs/applications/libraries/python.rst:606
msgid "Get Devices of a particular Device Type"
msgstr ""
"取得特定裝置類型的裝置"

#: ../docs/applications/libraries/python.rst:608
msgid "The *retrieveDevices()* method can be used to retrieve all the devices of a particular device type in an organization from IoT Platform. For example,"
msgstr ""
"*retrieveDevices()* 方法可用來擷取 IoT Platform 組織中特定裝置類型的所有裝置。例如，"

#: ../docs/applications/libraries/python.rst:615
msgid "The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"回應包含應用程式要從回應中擷取字典 *results*，以取得傳回的裝置陣列所需的參數。要執行進一步的呼叫則需要回應中的其他參數，例如，*_bookmark* 元素可用來翻看結果。在不指定書籤的情況下發出第一個要求，然後取得在回應中傳回的書籤，並將其提供在對下一頁的要求上。重複這些步驟，直到沒有書籤而指出結果集的結尾為止。每個要求都必須對其他參數使用完全相同的值，否則結果將會是未定義。"

#: ../docs/applications/libraries/python.rst:617
#: ../docs/applications/libraries/python.rst:889
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of dictionary as shown below,"
msgstr ""
"若要傳遞 *_bookmark* 或任何其他條件，必須使用超載方法。超載方法會使用字典格式的參數，如下所示。"

#: ../docs/applications/libraries/python.rst:623
msgid "The above snippet sorts the response based on device id and uses the bookmark to page through the results."
msgstr ""
"上方的 Snippet 會根據裝置 ID 來排序回應，並使用書籤將結果分頁。"

#: ../docs/applications/libraries/python.rst:626
msgid "Add a Device"
msgstr ""
"新增裝置"

#: ../docs/applications/libraries/python.rst:628
msgid "The *registerDevice()* method is used to add a device to an IoT Platform organization. The *registerDevice()* method adds a single device to your IoT Platform organization. The parameters which can be set when adding a device are:"
msgstr ""
"*registerDevice()* 方法可用來將裝置新增至 IoT Platform 組織。*registerDevice()* 方法可將單一裝置新增至您的 IoT Platform 組織。可在新增裝置時設定的參數為："

#: ../docs/applications/libraries/python.rst:630
msgid "deviceTypeId: *Optional*. Assigns a device type to the device. Where there is a clash between variables defined by the device type and variables defined by under deviceInfo, the device specific variables will take precedence."
msgstr ""
"deviceTypeId：*選用*。將裝置類型指派給裝置。在裝置類型所定義的變數與 deviceInfo 所定義的變數之間有衝突的情況下，會優先使用裝置特定變數。"

#: ../docs/applications/libraries/python.rst:631
msgid "deviceId: *Mandatory*."
msgstr ""
"deviceId：*必要*。"

#: ../docs/applications/libraries/python.rst:632
msgid "authToken: *Optional*. If no authentication token is supplied, one will be generated and included in the response."
msgstr ""
"authToken：*選用*。如果未提供鑑別記號，將會產生一個記號，且包含在回應中。"

#: ../docs/applications/libraries/python.rst:633
msgid "deviceInfo: *Optional*. This parameter is optional, and can contain a number of variables, including: serialNumber, manufacturer, model, deviceClass, description, firmware and hardware versions, and descriptiveLocation."
msgstr ""
"deviceInfo：*選用*。此參數是選用的，且可包含許多變數，包括：serialNumber、製造商、機型、deviceClass、說明、韌體和硬體版本以及 descriptiveLocation。"

#: ../docs/applications/libraries/python.rst:634
msgid "metadata: *Optional*. Metadata can optionally be added in the form of custom field:value string pairs. An example is given in the code sample below."
msgstr ""
"metadata：*選用*。可以選擇性地以自訂 field:value 字串配對的格式新增 meta 資料。下列程式碼範例中提供了範例。"

#: ../docs/applications/libraries/python.rst:635
msgid "location: *Optional*. This parameter contains the longitude, latitude, elevation, accuracy, and mesauredDateTime variables."
msgstr ""
"location：*選用*。此參數包含經度、緯度、高度、精確度和 mesauredDateTime 等變數。"

#: ../docs/applications/libraries/python.rst:637
msgid "For more information on the parameters presented here, and the response format and codes, please see the relevant section of `API documentation <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__."
msgstr ""
"如需此處所列的參數和回應格式與代碼的相關資訊，請參閱 `API 文件<https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__的相關區段。"

#: ../docs/applications/libraries/python.rst:639
msgid "When using the *registerDevice()* method, you must define the mandatory deviceID parameter, and any of the optional parameters you require for your device, then call the method using the parameters you've selected."
msgstr ""
"使用 *registerDevice()* 方法時，您必須定義必要的 deviceID 參數，和您的裝置所需的任何選用參數，然後使用您所選取的參數來呼叫方法。"

#: ../docs/applications/libraries/python.rst:642
#: ../docs/applications/libraries/python.rst:703
#: ../docs/applications/libraries/python.rst:746
msgid "Sample"
msgstr ""
"範例"

#: ../docs/applications/libraries/python.rst:644
msgid "The following code sample should be inserted after the constructor code in a .py file. This code demonstrates defining the deviceId, authToken, metadata, deviceInfo parameters, and location parameters and then using the method with those parameters and adding a device type."
msgstr ""
"下列程式碼範例應在 .py 檔案中的建構子程式碼後面插入。此程式碼會示範如何定義 deviceId、authToken、meta 資料、deviceInfo 參數和位置參數，然後使用具有這些參數的方法，並新增裝置類型。"

#: ../docs/applications/libraries/python.rst:658
msgid "Delete a Device"
msgstr ""
"刪除裝置"

#: ../docs/applications/libraries/python.rst:660
msgid "The *deleteDevice()* method is used to remove a device from an IoT Platform organization. When deleting a device using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*deleteDevice()* 方法可用來從 IoT Platform 組織中移除裝置。使用此方法刪除裝置時，必須在方法中指定的參數為 deviceTypeId 和 deviceId。"

#: ../docs/applications/libraries/python.rst:662
#: ../docs/applications/libraries/python.rst:674
msgid "The following code snippet provides an example of the format required for this method."
msgstr ""
"下列程式碼 Snippet 提供此方法所需之格式的範例。"

#: ../docs/applications/libraries/python.rst:670
msgid "Get a Device"
msgstr ""
"取得裝置"

#: ../docs/applications/libraries/python.rst:672
msgid "The *getDevice()* method can be used to retrieve a device from an IoT Platform organization. When retrieving device details using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*getDevice()* 方法可用來從 IoT Platform 組織中擷取裝置。使用此方法擷取裝置詳細資料時，必須在方法中指定的參數為 deviceTypeId 和 deviceId。"

#: ../docs/applications/libraries/python.rst:682
msgid "Get all Devices"
msgstr ""
"取得所有裝置"

#: ../docs/applications/libraries/python.rst:684
msgid "The *getAllDevices()* method can be used to retrieve all devices within an IoT Platform organization."
msgstr ""
"*getAllDevices()* 方法可用來擷取 IoT Platform 組織內的所有裝置。"

#: ../docs/applications/libraries/python.rst:692
msgid "Update a Device"
msgstr ""
"更新裝置"

#: ../docs/applications/libraries/python.rst:694
msgid "The *updateDevice()* method is used to modify one or more properties of a device. Any property in the deviceInfo or metadata parameters can be updated. In order to update a device property, it must be defined above the method. The status parameter should contain \"alert\": True. The Alert property controls whether a device will display error codes in the IoT Platform user interface, and should be set by default to 'True'."
msgstr ""
"*updateDevice()* 方法可用來修改裝置的一或多個內容。deviceInfo 或 meta 資料參數中的任何內容皆可更新。若要更新裝置內容，必須將內容定義於方法上方。狀態參數應包含 \"alert\"：True。「警示」內容會控制裝置是否在 IoT Platform 使用者介面中顯示錯誤碼，而且依預設應設為 'True'。"

#: ../docs/applications/libraries/python.rst:705
msgid "In this sample, the following code identifies a specific device, and updates several properties under the deviceInfo parameter."
msgstr ""
"在此範例中，下列程式碼會識別特定裝置，並更新 deviceInfo 參數下的數個內容。"

#: ../docs/applications/libraries/python.rst:714
msgid "Get Location Information"
msgstr ""
"取得位置資訊"

#: ../docs/applications/libraries/python.rst:716
msgid "The *getDeviceLocation()* method can be used to retrieve the location information of a device. The parameters required for retrieving the location data are deviceTypeId and deviceId."
msgstr ""
"*getDeviceLocation()* 方法可用來擷取裝置的位置資訊。擷取位置資料所需的參數為 deviceTypeId 和 deviceId。"

#: ../docs/applications/libraries/python.rst:722
msgid "The response to this method contains the longitude, latitude, elevation, accuracy, measuredTimeStamp, and updatedTimeStamp properties."
msgstr ""
"此方法的回應包含經度、緯度、高度、精確度、measuredTimeStamp 和 updatedTimeStamp 等內容。"

#: ../docs/applications/libraries/python.rst:726
msgid "Update Location Information"
msgstr ""
"更新位置資訊"

#: ../docs/applications/libraries/python.rst:728
msgid "The *updateDeviceLocation()* method is used to modify the location information for a device. Simlarly to updating device properties, the deviceLocation parameter must be defined with the changes you wish to apply. The code sample below demonstrates changing the location data for a given device."
msgstr ""
"*updateDeviceLocation()* 方法可用來修改裝置的位置資訊。如同更新裝置內容，您也必須以要套用的變更來定義 deviceLocation 參數。下方的程式碼範例示範如何變更給定裝置的位置資料。"

#: ../docs/applications/libraries/python.rst:735
msgid "If no date is supplied, the entry is added with the current date and time."
msgstr ""
"如果未提供日期，將會以現行日期和時間新增該項目。"

#: ../docs/applications/libraries/python.rst:739
msgid "Get Device Management Information"
msgstr ""
"取得裝置管理資訊"

#: ../docs/applications/libraries/python.rst:741
msgid "The *getDeviceManagementInformation()* method is used to get the device management information for a device. The response contains the last activity date-time, the device's dormant status (true/false), support for device and firmware actions, and firmware data. For a comprehensive list of response content, please see the relevant API documentation."
msgstr ""
"*getDeviceManagementInformation()* 方法可用來取得裝置的裝置管理資訊。回應包含前次活動日期時間、裝置的休眠狀態 (true/false)、裝置和韌體動作的支援，以及韌體資料。如需完整的回應內容清單，請參閱相關的 API 文件。"

#: ../docs/applications/libraries/python.rst:743
msgid "The following code sample will return the device management information for a device with the deviceId \"00aabbccde03\", with deviceTypeId \"iotsample-arduino\"."
msgstr ""
"下列程式碼範例會針對 deviceId 為 \"00aabbccde03\"、deviceTypeId 為 \"iotsample-arduino\" 的裝置傳回其裝置管理資訊。"

#: ../docs/applications/libraries/python.rst:756
msgid "Device diagnostic operations"
msgstr ""
"裝置診斷作業"

#: ../docs/applications/libraries/python.rst:758
msgid "Applications can use device diagnostic operations to clear logs, retrieve all or specific logs for a device, add log information, delete logs, clear error codes, get device error codes, and add an error codes."
msgstr ""
"應用程式可使用裝置診斷作業來清除日誌、擷取裝置的所有或特定日誌、新增日誌資訊、刪除日誌、清除錯誤碼、取得裝置錯誤碼，以及新增錯誤碼。"

#: ../docs/applications/libraries/python.rst:760
msgid "For more detailed information on query and response models, response codes, and query paramters, please see the relevant API documentation."
msgstr ""
"如需查詢和回應模型、回應碼和查詢參數的詳細資訊，請參閱相關的 API 文件。"

#: ../docs/applications/libraries/python.rst:763
msgid "Get Diagnostic logs"
msgstr ""
"取得診斷日誌"

#: ../docs/applications/libraries/python.rst:765
msgid "The *getAllDiagnosticLogs()* method is used to retrieve all diagnostic logs for a specific device. The *getAllDiagnosticLogs()* method requires the deviceTypeId and deviceId parameters."
msgstr ""
"*getAllDiagnosticLogs()* 方法可用來擷取特定裝置的所有診斷日誌。*getAllDiagnosticLogs()* 方法需要 deviceTypeId 和 deviceId 參數。"

#: ../docs/applications/libraries/python.rst:771
msgid "The response model for this method contains the logId, message, severity, data, and timestamp."
msgstr ""
"此方法的回應模型包含日誌 ID、訊息、嚴重性、資料和時間戳記。"

#: ../docs/applications/libraries/python.rst:774
msgid "Clear Diagnostic logs for a Device"
msgstr ""
"清除裝置的診斷日誌"

#: ../docs/applications/libraries/python.rst:776
msgid "The *clearAllDiagnosticLogs()* method is used to delete all diagnostic logs for a specific device. The required parameters are deviceTypeId and deviceId. Care should be taken when deleting logs, as logs cannot be recovered once deleted."
msgstr ""
"*clearAllDiagnosticLogs()* 方法可用來刪除特定裝置的所有診斷日誌。必要的參數是 deviceTypeId 和 deviceId。刪除日誌時請多加留意，因為日誌一旦刪除即無法回復。"

#: ../docs/applications/libraries/python.rst:784
msgid "Add a Diagnostic log"
msgstr ""
"新增診斷日誌"

#: ../docs/applications/libraries/python.rst:786
msgid "The *addDiagnosticLog()* method is used to add an entry in the diagnostic log of the device. The log may be pruned as the new entry is added. If no date is supplied, the entry is added with the current date and time. To use this method, first define a 'logs' parameter with the following variables:"
msgstr ""
"*addDiagnosticLog()* 方法可用來在裝置的診斷日誌中新增項目。日誌可能在新增項目時刪改。如果未提供日期，將會以現行日期和時間新增該項目。若要使用此方法，請先使用下列變數定義 'logs' 參數："

#: ../docs/applications/libraries/python.rst:788
msgid "message: This variable is mandatory, and contains the new diagnostic message."
msgstr ""
"message：此變數是必要的，且包含新的診斷訊息。"

#: ../docs/applications/libraries/python.rst:789
msgid "severity: This variable is optional. If used it corresponds to the severity of the diagnostic log, and should be 0, 1, or 2, corresponding to the informational, warning, and error categories."
msgstr ""
"severity：此變數是選用的。如果使用的話，會對應於診斷日誌的嚴重性，且應為 0、1 或 2，分別對應於參考資訊、警告和錯誤種類。"

#: ../docs/applications/libraries/python.rst:790
msgid "data: This variable is optional, and should contain diagnostic data."
msgstr ""
"data：此變數是選用的，應包含診斷資料。"

#: ../docs/applications/libraries/python.rst:791
#: ../docs/applications/libraries/python.rst:849
msgid "timestamp: This variable is optional, and contains the date and time of the log entry in ISO8601 format. If this variable is not included, it is automatically added with the current date and time."
msgstr ""
"timestamp：此變數是選用的，且包含日誌項目的日期和時間（ISO8601 格式）。如果未包含此變數，將會以現行日期和時間自動加以新增。"

#: ../docs/applications/libraries/python.rst:793
msgid "The other necessary paramteres required in the method are the deviceTypeId and deviceId for the specific device."
msgstr ""
"此方法中所需的其他參數為特定裝置的 deviceTypeId 和 deviceId。"

#: ../docs/applications/libraries/python.rst:795
msgid "The code sample below contains an example of the method."
msgstr ""
"下列程式碼範例包含此方法的範例。"

#: ../docs/applications/libraries/python.rst:804
msgid "Retrieve a specific Diagnostic log"
msgstr ""
"擷取特定診斷日誌"

#: ../docs/applications/libraries/python.rst:806
msgid "The *getDiagnosticLog()* method is used to retrieve a specific diagnostic log for a specified device based on the log id. The required parameters for this method are the deviceTypeId, deviceId, and logId."
msgstr ""
"*getDiagnosticLog()* 方法可用來根據日誌 ID 擷取指定裝置的特定診斷日誌。此方法的必要參數是 deviceTypeId、deviceId 和 logId。"

#: ../docs/applications/libraries/python.rst:814
msgid "Delete a Diagnostic log"
msgstr ""
"刪除診斷日誌"

#: ../docs/applications/libraries/python.rst:816
msgid "The *deleteDiagnosticLog()* can be used to delete a specific diagnostic log. In order to specify a diagnostic log, the deviceTypeId, deviceId, and logId parameters should be supplied."
msgstr ""
"*deleteDiagnosticLog()* 可用來刪除特定的診斷日誌。若要指定診斷日誌，應提供 deviceTypeId、deviceId 和 logId 參數。"

#: ../docs/applications/libraries/python.rst:824
msgid "Retrieve Device Error Codes"
msgstr ""
"擷取裝置錯誤碼"

#: ../docs/applications/libraries/python.rst:826
msgid "The *getAllDiagnosticErrorCodes()* method is used to retrieve all diagnostic error codes associated with a specific device."
msgstr ""
"*getAllDiagnosticErrorCodes()* 方法可用來擷取與特定裝置相關聯的所有診斷錯誤碼。"

#: ../docs/applications/libraries/python.rst:834
msgid "Clear Diagnostic Error Codes"
msgstr ""
"清除診斷錯誤碼"

#: ../docs/applications/libraries/python.rst:836
msgid "The *clearAllErrorCodes()* method is used to clear the list of error codes associated with the device. The list is replaced with a single error code of zero."
msgstr ""
"*clearAllErrorCodes()* 方法可用來清除與裝置相關聯的錯誤碼清單。此清單會以單一錯誤碼零來取代。"

#: ../docs/applications/libraries/python.rst:844
msgid "Add single Diagnostic ErrorCode"
msgstr ""
"新增單一診斷 ErrorCode"

#: ../docs/applications/libraries/python.rst:846
msgid "The *addErrorCode()* method is used to add an error code to the list of error codes associated with the device. The list may be pruned as the new entry is added. The parameters required in the method are deviceTypeId, deviceId, and errorCode. The errorCode parameter contains the following variables:"
msgstr ""
"*addErrorCode()* 方法可用來將錯誤碼新增至與裝置相關聯的錯誤碼清單。清單可能在新增項目時刪改。此方法中所需的參數為 deviceTypeId、deviceId 和 errorCode。errorCode 參數包含下列變數："

#: ../docs/applications/libraries/python.rst:848
msgid "errorCode: This variable is mandatory and should be set as an integer. This sets the number of the error code to be created."
msgstr ""
"errorCode：此變數是必要的，應設為整數。這會設定所要建立的錯誤碼數目。"

#: ../docs/applications/libraries/python.rst:859
msgid "Connection problem determination"
msgstr ""
"連線問題判斷"

#: ../docs/applications/libraries/python.rst:861
msgid "The *getDeviceConnectionLogs()* method is used to list connection log events for a device. This information can be used to help diagnose connectivity problems between the device and the IoT Platform service. The entries record successful connection, unsuccessful connection attempts, intentional disconnection and server-initiated disconnection events."
msgstr ""
"*getDeviceConnectionLogs()* 方法可用來列出裝置的連線日誌事件。這項資訊有助於診斷裝置與 IoT Platform 服務之間的連線功能問題。這些項目會記錄成功的連線、不成功的連線嘗試、刻意的斷線和伺服器起始的斷線事件。"

#: ../docs/applications/libraries/python.rst:867
msgid "The response includes a list of log entries, containing log messages and timestamps."
msgstr ""
"回應包括日誌項目清單，其中包含日誌訊息和時間戳記。"

#: ../docs/applications/libraries/python.rst:872
msgid "Historical Event Retrieval"
msgstr ""
"歷程事件擷取"

#: ../docs/applications/libraries/python.rst:874
msgid "These operations can be used to view events from all devices, view events from a device type or to view events for a specific device."
msgstr ""
"這些作業可用來檢視所有裝置的事件、檢視某一裝置類型的事件、檢視特定裝置的事件。"

#: ../docs/applications/libraries/python.rst:876
msgid "Refer to the Historical Event Retrieval section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"如需查詢參數清單、要求和回應模型與 HTTP 狀態碼的相關資訊，請參閱 `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ 的「歷程事件擷取」區段。"

#: ../docs/applications/libraries/python.rst:879
msgid "View events from all devices"
msgstr ""
"檢視所有裝置的事件"

#: ../docs/applications/libraries/python.rst:881
msgid "Method getHistoricalEvents() can be used to view events across all devices registered to the organization."
msgstr ""
"getHistoricalEvents() 方法可用來檢視向組織登錄的所有裝置的事件。"

#: ../docs/applications/libraries/python.rst:887
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"回應將包含一些參數，且應用程式必須從回應中擷取 JSON 元素 *events*，以取得傳回的事件陣列。要執行進一步的呼叫則需要回應中的其他參數，例如，*_bookmark* 元素可用來翻看結果。在不指定書籤的情況下發出第一個要求，然後取得在回應中傳回的書籤，並將其提供在對下一頁的要求上。重複這些步驟，直到沒有書籤而指出結果集的結尾為止。每個要求都必須對其他參數使用完全相同的值，否則結果將會是未定義。"

#: ../docs/applications/libraries/python.rst:898
msgid "The above snippet returns the events between the start and end time."
msgstr ""
"上方的 Snippet 會傳回開始與結束時間之間的事件。"

#: ../docs/applications/libraries/python.rst:901
msgid "View events from a device type"
msgstr ""
"檢視某一裝置類型的事件"

#: ../docs/applications/libraries/python.rst:903
msgid "The *getHistoricalEvents()* method is used to view events from all the devices of a particular device type."
msgstr ""
"*getHistoricalEvents()* 方法可用來檢視特定裝置類型之所有裝置的事件。"

#: ../docs/applications/libraries/python.rst:909
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. As mentioned in the *view events from all devices* section, the overloaded method can be used to control the output."
msgstr ""
"回應將包含一些參數，且應用程式必須從回應中擷取 JSON 元素 *events*，以取得傳回的事件陣列。如*檢視所有裝置的事件*區段中提到的，您可以使用超載方法來控制輸出。"

#: ../docs/applications/libraries/python.rst:913
msgid "View events from a device"
msgstr ""
"檢視某一裝置的事件"

#: ../docs/applications/libraries/python.rst:915
msgid "The *getHistoricalEvents()* method is used to view events from a specific device. DeviceTypeId and deviceId parameters are required in order to use this method."
msgstr ""
"*getHistoricalEvents()* 方法可用來檢視特定裝置的事件。要使用此方法，必須有 DeviceTypeId 和 deviceId 參數。"

#: ../docs/applications/libraries/python.rst:921
msgid "The response will contain more parameters and application needs to retrieve the JSON element *events* from the response to get the array of events returned."
msgstr ""
"回應將包含更多參數，且應用程式必須從回應中擷取 JSON 元素 *events*，以取得傳回的事件陣列。"

