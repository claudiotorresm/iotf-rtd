# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/python.rst:2
msgid "Python for Device Developers"
msgstr ""
"Python für Geräteentwickler"

#: ../docs/devices/libraries/python.rst:4
msgid "See `iot-python <https://github.com/ibm-messaging/iot-python>`_ in GitHub"
msgstr ""
"Siehe `iot-python <https://github.com/ibm-messaging/iot-python>`_ in GitHub"

#: ../docs/devices/libraries/python.rst:5
msgid "See `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ on PyPi"
msgstr ""
"Siehe `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ in PyPi"

#: ../docs/devices/libraries/python.rst:10
msgid "Constructor"
msgstr ""
"Konstruktor"

#: ../docs/devices/libraries/python.rst:12
msgid "The constructor builds the client instance, and accepts an options dict containing the following definitions:"
msgstr ""
"Der Konstruktor erstellt die Clientinstanz und akzeptiert ein Optionsverzeichnis, das die folgenden Definitionen enthält:"

#: ../docs/devices/libraries/python.rst:14
msgid "``org`` - Your organization ID."
msgstr ""
"``org`` - Ihre Organisations-ID."

#: ../docs/devices/libraries/python.rst:15
msgid "``type`` - The type of your device."
msgstr ""
"``type`` - Der Typ Ihres Geräts."

#: ../docs/devices/libraries/python.rst:16
msgid "``id`` - The ID of your device."
msgstr ""
"``id`` - Die ID Ihres Geräts."

#: ../docs/devices/libraries/python.rst:17
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``token``)."
msgstr ""
"``auth-method`` - Die Methode der Authentifizierung (der einzige derzeit unterstützte Wert ist ``token``)."

#: ../docs/devices/libraries/python.rst:18
msgid "``auth-token`` - API key token (required if auth-method is ``token``)."
msgstr ""
"``auth-token`` - Das API-Schlüsseltoken (erforderlich, falls 'auth-method' den Wert ``token`` aufweist)."

#: ../docs/devices/libraries/python.rst:20
msgid "If no options dict is provided, the client will connect to the IoT Platform Quickstart, and default to an unregistered device. The options dict creates definitions which are used to interact with the IoT Platform module."
msgstr ""
"Wenn keine Option 'dict' angegeben ist, stellt der Client die Verbindung zu IoT Platform Quickstart her und verwendet standardmäßig ein nicht registriertes Gerät. Das Options-Dict erstellt Definitionen, die für die Interaktion mit dem IoT Platform-Modul verwendet werden."

#: ../docs/devices/libraries/python.rst:39
msgid "Using a configuration file"
msgstr ""
"Konfigurationsdatei verwenden"

#: ../docs/devices/libraries/python.rst:41
msgid "Instead of including an options dict directly, you can use a configuration file containing an options dict. If you are using a configuration file containing an options dict, use the following code format."
msgstr ""
"Anstatt ein Options-Dict direkt einzubeziehen, können Sie eine Konfigurationsdatei verwenden, die ein Options-Dict enthält. Wenn Sie eine Konfigurationsdatei verwenden, die ein Options-Dict enthält, verwenden Sie das folgende Codeformat."

#: ../docs/devices/libraries/python.rst:52
msgid "The content of the configuration file must be in the following format(need not contain **$** sign):"
msgstr ""
"Der Inhalt der Konfigurationsdatei muss im folgenden Format vorliegen (darf nicht das Zeichen **$** enthalten):"

#: ../docs/devices/libraries/python.rst:68
msgid "Publishing events"
msgstr ""
"Ereignisse publizieren"

#: ../docs/devices/libraries/python.rst:69
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"Ereignisse sind der Mechanismus, mit dem Geräte Daten in IoT Platform publizieren. Das Gerät steuert den Inhalt des Ereignisses und ordnet einen Namen für jedes von dem Gerät gesendete Ereignis zu."

#: ../docs/devices/libraries/python.rst:71
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"Wenn ein Ereignis von IoT Platform empfangen wird, werden die Identifikationsdaten der Verbindung, über die das Ereignis empfangen wurde, dazu verwendet, das Gerät zu ermitteln, von dem das Ereignis gesendet wurde. Mit dieser Architektur ist es für ein Gerät unmöglich, die Identität eines anderen Geräts anzunehmen."

#: ../docs/devices/libraries/python.rst:73
msgid "Events can be published at any of the three :ref:`quality of service levels <qoslevels>` defined by the MQTT protocol.  By default events will be published as qos level 0."
msgstr ""
"Ereignisse können mit jeder der drei Servicequalitätsstufen (:ref:`quality of service levels <qoslevels>`), die durch das MQTT-Protokoll definiert sind, publiziert werden.  Standardmäßig werden Ereignisse als qos-Stufe 0 publiziert."

#: ../docs/devices/libraries/python.rst:76
msgid "Publish event using default quality of service"
msgstr ""
"Ereignisse mit der standardmäßigen Servicequalität publizieren"

#: ../docs/devices/libraries/python.rst:85
msgid "Publish event using user-defined quality of service"
msgstr ""
"Ereignisse mit einer benutzerdefinierten Servicequalität publizieren"

#: ../docs/devices/libraries/python.rst:87
msgid "Events can be published at higher MQTT quality of servive levels, but these events may take slower then QoS level 0, because of the extra confirmation of receipt."
msgstr ""
"Ereignisse könne auf höheren MQTT-Servicequalitätsstufen publiziert werden. Diese Ereignisse können jedoch wegen der zusätzlichen Eingangsbestätigung langsamer sein als QoS-Stufe 0."

#: ../docs/devices/libraries/python.rst:99
msgid "Handling commands"
msgstr ""
"Befehle verarbeiten"

#: ../docs/devices/libraries/python.rst:100
msgid "When the device client connects it automatically subscribes to any command for this device.  To process specific commands you need to register a command callback method. The messages are returned as an instance of the Command class which has the following properties:"
msgstr ""
"Wenn der Geräteclient die Verbindung herstellt, subskribiert er automatisch jeden Befehl für dieses Gerät.  Zum Verarbeiten bestimmter Befehle müssen Sie eine Callback-Methode für Befehle registrieren. Die Nachrichten werden als eine Instanz der Befehlsklasse zurückgegeben, die die folgenden Eigenschaften hat:"

#: ../docs/devices/libraries/python.rst:105
msgid "command - string"
msgstr ""
"command - Zeichenfolge"

#: ../docs/devices/libraries/python.rst:106
msgid "format - string"
msgstr ""
"format - Zeichenfolge"

#: ../docs/devices/libraries/python.rst:107
msgid "data - dict"
msgstr ""
"data - Dict"

#: ../docs/devices/libraries/python.rst:108
msgid "timestamp - datetime"
msgstr ""
"timestamp - Datum/Uhrzeit"

#: ../docs/devices/libraries/python.rst:136
msgid "Custom message format support"
msgstr ""
"Unterstützung für das Format angepasster Nachrichten"

#: ../docs/devices/libraries/python.rst:137
msgid "By default the library supports the encoding and decoding of Python dictionary objects as JSON when you use msgFormat \"json\".  When you use msgFormat \"json-iotf\" it will encode the message in accordance with the IoT Platform JSON Payload Specification.  To add support for your own custom message formats see the `sample in GitHub <https://github.com/ibm-messaging/iot-python/tree/master/samples/customMessageFormat>`__"
msgstr ""
"Standardmäßig unterstützt die Bibliothek die Codierung und Decodierung von Python-Dictionary-Objekten als JSON, wenn Sie das msgFormat-Nachrichtenformat \"json\" verwenden.  Wenn Sie das Nachrichtenformat (msgFormat) \"json-iotf\" verwenden, wird die Nachricht in Übereinstimmung mit der IoT Platform-JSON-Nutzdatenspezifikation codiert.  Zum Hinzufügen der Unterstützung für Ihre eigenen angepassten Nachrichtenformate siehe das `Beispiel in GitHub <https://github.com/ibm-messaging/iot-python/tree/master/samples/customMessageFormat>`__"

#: ../docs/devices/libraries/python.rst:139
msgid "Once you have created your custom encoder module it needs to be registered in the device client.  If you attempt to use an unknown message format when sending an event or the device receives a command send in a format that it does not know how to decode then the library will throw a MissingMessageDecoderException."
msgstr ""
"Wenn Sie Ihr angepasstes Encoder-Modul erstellt haben, muss es im Geräteclient registriert werden.  Wenn Sie versuchen, ein unbekanntes Nachrichtenformat beim Senden eines Ereignisses zu verwenden, oder wenn das Gerät einen Befehl empfängt, der in einem Format gesendet wurde, das das Gerät nicht decodieren kann, gibt das Gerät die Ausnahmebedingung MissingMessageDecoderException aus."

