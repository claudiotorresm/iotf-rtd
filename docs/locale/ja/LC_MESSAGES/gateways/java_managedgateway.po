# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/gateways/java_managedgateway.rst:3
msgid "Java Client Library - Managed Gateway"
msgstr ""
"Java クライアント・ライブラリー - 管理対象ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:6
msgid "Introduction"
msgstr ""
"概要"

#: ../docs/gateways/java_managedgateway.rst:8
msgid "Gateway plays an important role in the device management of devices connected to it. Many of these devices will be too basic to be managed. For a managed device, the device management agent on the gateway acts as a proxy for the connected device. The protocol used by the gateway to manage the connected devices is arbitrary, and there need not be a device management agent on the connected devices. It is only necessary for the gateway to ensure that devices connected to it perform their responsibilities as managed devices, performing any translation and processing required to achieve this. The management agent in gateway will act as more than a transparent tunnel between the attached device and the Watson IoT Platform."
msgstr ""
"ゲートウェイは、それに接続されたデバイスのデバイス管理で重要な役割を果たします。それらのデバイスの多くは、過度に初歩的なものであるために管理できません。管理対象デバイスでは、ゲートウェイのデバイス管理エージェントが、接続されたデバイスのプロキシーとして機能します。ゲートウェイは接続されたデバイスを任意のプロトコルを使用して管理することができ、接続されたデバイスにデバイス管理エージェントが存在する必要はありません。ゲートウェイで必要なのは、それに接続されたデバイスが管理対象デバイスとしての役割を果たし、そのために必要な変換や処理を実行していることを確認することだけです。ゲートウェイの管理エージェントの機能は、接続されているデバイスと Watson IoT Platform の間で透過的なトンネルとなることだけではありません。"

#: ../docs/gateways/java_managedgateway.rst:10
msgid "For example, It is unlikely that a device connected to a gateway will be able to download the firmware itself. In this case, the gateway’s device management agent will intercept the request to download the firmware and perform the download to its own storage. Then, when the device is instructed to perform the upgrade, the gateway’s device management agent will push the firmware to the device and update it."
msgstr ""
"例えば、ゲートウェイに接続されたデバイス自体がファームウェアをダウンロードできるようになる可能性はわずかです。そのようなケースでは、ゲートウェイのデバイス管理エージェントがファームウェアをダウンロードするリクエストを代行受信し、独自のストレージにダウンロードします。その後、デバイスにアップグレードを実行するようにとの指示が与えられると、ゲートウェイのデバイス管理エージェントはファームウェアをデバイスにプッシュして更新します。"

#: ../docs/gateways/java_managedgateway.rst:12
msgid "This section contains information on how gateways (and attached devices) can connect to the Internet of Things Platform Device Management service using Java and perform device management operations like firmware update, location update, and diagnostics update."
msgstr ""
"このセクションには、Java を使用してゲートウェイ (および接続されているデバイス) を Internet of Things Platform デバイス管理サービスに接続する方法や、ファイアウォールの更新やロケーションの更新、診断の更新などのデバイス管理操作を実行する方法に関する情報が記載されています。"

#: ../docs/gateways/java_managedgateway.rst:17
msgid "Create DeviceData"
msgstr ""
"DeviceData の作成"

#: ../docs/gateways/java_managedgateway.rst:18
msgid "The `device model <https://docs.internetofthings.ibmcloud.com/reference/device_model.html>`__ describes the metadata and management characteristics of a device or a gateway. The device database in the IBM Watson Internet of Things Platform is the master source of device information. Applications and managed devices are able to send updates to the database such as a location or the progress of a firmware update. Once these updates are received by the IBM Watson Internet of Things Platform, the device database is updated, making the information available to applications."
msgstr ""
"`デバイス・モデル <https://docs.internetofthings.ibmcloud.com/reference/device_model.html>`__ とは、デバイスまたはゲートウェイのメタデータおよび管理特性を記述するものです。IBM Watson Internet of Things Platform において、デバイス・データベースはデバイス情報のマスター・ソースです。アプリケーションおよび管理対象デバイスは、場所やファームウェア更新の進行状況などの更新情報をデータベースに送信できます。IBM Watson Internet of Things Platform がこのような更新情報を受け取ると、デバイス・データベースが更新され、アプリケーションでそれらの情報を使用できるようになります。"

#: ../docs/gateways/java_managedgateway.rst:20
msgid "The device model in the WIoTP client library is represented as DeviceData and to create a DeviceData one needs to create the following objects,"
msgstr ""
"WIoTP クライアント・ライブラリーのデバイス・モデルは DeviceData として表されます。DeviceData を作成するには、以下のオブジェクトを作成する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:22
msgid "DeviceInfo (Optional)"
msgstr ""
"DeviceInfo (オプション)"

#: ../docs/gateways/java_managedgateway.rst:23
msgid "DeviceLocation (Optional, required only if the device wants to be notified about the location set by the application through Watson IoT Platform API)"
msgstr ""
"DeviceLocation (オプション、Watson IoT Platform API を使用してアプリケーションが設定したロケーションについてデバイスに通知する場合にのみ必須です)"

#: ../docs/gateways/java_managedgateway.rst:24
msgid "DeviceFirmware (Optional)"
msgstr ""
"DeviceFirmware (オプション)"

#: ../docs/gateways/java_managedgateway.rst:25
msgid "DeviceMetadata (optional)"
msgstr ""
"DeviceMetadata (オプション)"

#: ../docs/gateways/java_managedgateway.rst:27
msgid "The following code snippet shows how to create the object DeviceInfo along with DeviceMetadata with sample data:"
msgstr ""
"以下のコード・スニペットは、サンプル・データを使用してオブジェクト DeviceInfo を DeviceMetadata と一緒に作成する方法を示しています。"

#: ../docs/gateways/java_managedgateway.rst:49
msgid "The following code snippet shows how to create the DeviceData object with the above created DeviceInfo and DeviceMetadata objects:"
msgstr ""
"以下のコード・スニペットは、DeviceData オブジェクトを、上記で作成した DeviceInfo オブジェクトおよび DeviceMetadata オブジェクトと一緒に作成する方法を示しています。"

#: ../docs/gateways/java_managedgateway.rst:58
msgid "Each gateway and attached devices must have its own DeviceData to represent itself in the Platform. In the case of gateway, the DeviceData will be passed to the library as part of constructing the ManagedGateway instance, and in the case of attached device, the DeviceData will be passed as part of the sendDeviceManageRequest()."
msgstr ""
"各ゲートウェイおよび接続されているデバイスには、Platform でそれらを表すための独自の DeviceData が必要です。ゲートウェイの場合、DeviceData は ManagedGateway インスタンスを構成する処理の一部としてライブラリーに渡されます。接続されているデバイスの場合、DeviceData は sendDeviceManageRequest() の一部として渡されます。"

#: ../docs/gateways/java_managedgateway.rst:63
msgid "Construct ManagedGateway"
msgstr ""
"ManagedGateway の構成"

#: ../docs/gateways/java_managedgateway.rst:64
msgid "ManagedGateway - A gateway class that connects the gateway as managed gateway to IBM Watson Internet of Things Platform and enables the gateway to perform one or more Device Management operations for itself and attached devices. Also the ManagedGateway instance can be used to do normal gateway operations like publishing gateway events, attached device events and listening for commands from application."
msgstr ""
"ManagedGateway - ゲートウェイを管理対象ゲートウェイとして IBM Watson Internet of Things Platform に接続して、ゲートウェイがそれ自体のためおよび接続されているデバイスのために 1 つ以上のデバイス管理操作を実行できるようにするゲートウェイ・クラス。また、ManagedGateway インスタンスを使用して、ゲートウェイ・イベントや接続されているデバイス・イベントのパブリッシュ、およびアプリケーションからのコマンドの listen などの、通常のゲートウェイ操作を行うこともできます。"

#: ../docs/gateways/java_managedgateway.rst:66
msgid "ManagedGateway exposes 2 different constructors to support different user patterns,"
msgstr ""
"ManagedGateway は、異なる複数のユーザー・パターンをサポートする 2 つの異なるコンストラクターを公開します。"

#: ../docs/gateways/java_managedgateway.rst:68
msgid "**Constructor One**"
msgstr ""
"**コンストラクター 1**"

#: ../docs/gateways/java_managedgateway.rst:70
msgid "Constructs a ManagedGateway instance by accepting the DeviceData and the following properties,"
msgstr ""
"DeviceData と以下のプロパティーを受け入れることにより、ManagedGateway インスタンスを構成します。"

#: ../docs/gateways/java_managedgateway.rst:72
msgid "Organization-ID - Your organization ID."
msgstr ""
"Organization-ID - 組織 ID。"

#: ../docs/gateways/java_managedgateway.rst:73
msgid "Gateway-Type - The type of your gateway device."
msgstr ""
"Gateway-Type - ゲートウェイ・デバイスのタイプ。"

#: ../docs/gateways/java_managedgateway.rst:74
msgid "Gateway-ID - The ID of your gateway device."
msgstr ""
"Gateway-ID - ゲートウェイ・デバイスの ID。"

#: ../docs/gateways/java_managedgateway.rst:75
msgid "Authentication-Method - Method of authentication (The only value currently supported is \"token\")."
msgstr ""
"Authentication-Method - 認証方式 (現在サポートされている値は \"token\" のみ)。"

#: ../docs/gateways/java_managedgateway.rst:76
msgid "Authentication-Token - API key token"
msgstr ""
"Authentication-Token - API キー・トークン"

#: ../docs/gateways/java_managedgateway.rst:78
msgid "All these properties are required to interact with the IBM Watson Internet of Things Platform."
msgstr ""
"これらのプロパティーはすべて、IBM Watson Internet of Things Platform と対話するために必要です。"

#: ../docs/gateways/java_managedgateway.rst:80
msgid "The following code shows how to create a ManagedGateway instance:"
msgstr ""
"以下のコードでは、ManagedGateway インスタンスの作成方法を示しています。"

#: ../docs/gateways/java_managedgateway.rst:93
msgid "**Constructor Two**"
msgstr ""
"**コンストラクター 2**"

#: ../docs/gateways/java_managedgateway.rst:95
msgid "Construct a ManagedGateway instance by accepting the DeviceData and the MqttClient instance. This constructor requires the DeviceData to be created with additional device attributes like Device Type and Device Id as follows:"
msgstr ""
"DeviceData および MqttClient インスタンスを受け入れることにより、ManagedGateway インスタンスを構成します。以下のとおり、このコンストラクターについては、デバイス・タイプやデバイス ID などの追加のデバイス属性を使用して、DeviceData を作成する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:113
msgid "Note this constructor helps the custom device users to create a ManagedGateway instance with the already created and connected MqttClient instance to take advantage of device management operations. But we recommend the users to use the library for all the device functionalities."
msgstr ""
"このコンストラクターは、既に作成および接続されている MqttClient インスタンスとともにカスタム・デバイス・ユーザーが ManagedGateway インスタンスを作成して、デバイス管理操作を利用できるようにします。しかし、ユーザーがすべてのデバイス機能用のライブラリーを使用することをお勧めします。"

#: ../docs/gateways/java_managedgateway.rst:118
msgid "Manage request - gateway"
msgstr ""
"管理リクエスト - ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:120
msgid "The gateway can invoke sendGatewayManageRequest() method to participate in device management activities. The manage request will initiate a connect request internally if the device is not connected to the IBM Watson Internet of Things Platform already:"
msgstr ""
"ゲートウェイは、sendGatewayManageRequest() メソッドを呼び出して、デバイス管理アクティビティーに参加することができます。デバイスが IBM Watson Internet of Things Platform にまだ接続していない場合は、管理リクエストによって内部的に接続リクエストが開始されます。"

#: ../docs/gateways/java_managedgateway.rst:126
msgid "As shown, this method accepts following 3 parameters,"
msgstr ""
"示されているように、このメソッドは以下の 3 つのパラメーターを受け入れます。"

#: ../docs/gateways/java_managedgateway.rst:128
msgid "*lifetime* The length of time in seconds within which the gateway must send another **Manage** request in order to avoid being reverted to an unmanaged device and marked as dormant. If set to 0, the managed gateway will not become dormant. When set, the minimum supported setting is 3600 (1 hour)."
msgstr ""
"*lifetime* ゲートウェイが次の「**管理**」リクエストを送信しなければならない制限時間を秒数で指定します。これを過ぎると非管理対象デバイスに戻り、「休止」のマークが付けられます。「0」に設定すると、管理対象ゲートウェイは休止状態になりません。これを設定する場合、サポートされる最小設定値は 3600 (1 時間) です。"

#: ../docs/gateways/java_managedgateway.rst:129
msgid "*supportFirmwareActions* Tells whether the gateway supports firmware actions or not. The gateway must add a firmware handler to handle the firmware requests."
msgstr ""
"*supportFirmwareActions* ゲートウェイがファームウェア操作をサポートするかどうかを指定します。ファームウェアのリクエストを処理するには、ゲートウェイはファームウェア・ハンドラーを追加する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:130
msgid "*supportDeviceActions* Tells whether the gateway supports Device actions or not. The gateway must add a Device action handler to handle the reboot and factory reset requests."
msgstr ""
"*supportDeviceActions* ゲートウェイがデバイス操作をサポートするかどうかを指定します。リブートや工場出荷時設定へのリセットのリクエストを処理するには、ゲートウェイはデバイス操作ハンドラーを追加する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:133
msgid "Manage request - attached devices"
msgstr ""
"管理リクエスト - 接続されているデバイス"

#: ../docs/gateways/java_managedgateway.rst:135
msgid "The gateway can invoke sendDeviceManageRequest() method to make the attached devices participate in the device management activities."
msgstr ""
"ゲートウェイは、sendDeviceManageRequest() メソッドを呼び出して、接続されているデバイスがデバイス管理アクティビティーに参加するようにすることができます。"

#: ../docs/gateways/java_managedgateway.rst:141
msgid "As shown, this method accepts the details of the attached device apart from the lifetime and device/firmware support parameters. The gateway can also use the overloaded sendDeviceManageRequest() method to specify the DeviceData for the attached device."
msgstr ""
"示されているように、このメソッドは、制限時間のパラメーターやデバイス/ファームウェアのサポートのパラメーターとは別に、接続されているデバイスの詳細を受け入れます。ゲートウェイは、多重定義の sendDeviceManageRequest() メソッドを使用して、接続されているデバイスの DeviceData を指定することもできます。"

#: ../docs/gateways/java_managedgateway.rst:143
msgid "Refer to the `documentation <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/manage-device#manage-device>`__ for more information about the manage operation."
msgstr ""
"管理操作について詳しくは、`資料 <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/manage-device#manage-device>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:148
msgid "Unmanage request - gateway"
msgstr ""
"管理解除リクエスト - ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:150
msgid "A gateway can invoke sendGatewayUnmanageRequet() method when it no longer needs to be managed. The IBM Watson Internet of Things Platform will no longer send new device management requests for this gateway and all device management requests from the gateway (only for the gateway and not for the attached devices) will be rejected other than a **Manage** request."
msgstr ""
"ゲートウェイは、管理される必要がなくなったときに sendGatewayUnmanageRequet() メソッドを呼び出すことができます。IBM Watson Internet of Things Platform は新しいデバイス管理リクエストをこのゲートウェイに送信しなくなり、このゲートウェイからのすべてのデバイス管理リクエスト (ゲートウェイに対するものだけで、接続されているデバイスに対するものではない) は「**管理**」リクエストを除いて拒否されます。"

#: ../docs/gateways/java_managedgateway.rst:157
msgid "Unmanage request - attached devices"
msgstr ""
"管理解除リクエスト - 接続されているデバイス"

#: ../docs/gateways/java_managedgateway.rst:159
msgid "The gateway can invoke sendDeviceUnmanageRequet() method to move the attached device from managed state to unmanaged state. The IBM Watson Internet of Things Platform will no longer send new device management requests for this device and all device management requests from the gateway for this attached device will be rejected other than a **Manage** request."
msgstr ""
"ゲートウェイは、sendDeviceUnmanageRequet() メソッドを呼び出して、接続されているデバイスを管理状態から管理解除状態に移行させることができます。IBM Watson Internet of Things Platform は、新しいデバイス管理リクエストをこのデバイスに送信しなくなり、ゲートウェイからのこの接続されているデバイスのすべてのデバイス管理リクエストは「**管理**」リクエストを除いて拒否されるようになります。"

#: ../docs/gateways/java_managedgateway.rst:165
msgid "Refer to the `documentation <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/unmanage-device#unmanage-device>`__ for more information about the Unmanage operation."
msgstr ""
"管理解除の操作について詳しくは、`資料 <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/unmanage-device#unmanage-device>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:170
msgid "Location update - gateway"
msgstr ""
"ロケーションの更新 - ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:172
msgid "Gateways that can determine their location can choose to notify the IBM Watson Internet of Things Platform about location changes. The gateway can invoke one of the overloaded updateLocation() method to update the location of the device."
msgstr ""
"ロケーションを判別できるゲートウェイでは、ロケーションの変更を IBM Watson Internet of Things Platform に通知することを選択できます。ゲートウェイは、多重定義されたいずれかの updateLocation() メソッド呼び出して、デバイスのロケーションを更新することができます。"

#: ../docs/gateways/java_managedgateway.rst:185
msgid "Location update - attached devices"
msgstr ""
"ロケーションの更新 - 接続されているデバイス"

#: ../docs/gateways/java_managedgateway.rst:187
msgid "The gateway can invoke corresponding device method updateDeviceLocation() to update the location of the attached devices. The overloaded method can be used to specify the measuredDateTime and etc.."
msgstr ""
"ゲートウェイは、対応するデバイス・メソッド updateDeviceLocation() を呼び出して、接続されているデバイスのロケーションを更新できます。多重定義されたメソッドを使用して、measuredDateTime その他を指定できます。"

#: ../docs/gateways/java_managedgateway.rst:195
msgid "Refer to the `documentation <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-location#update-location>`__ for more information about the Location update."
msgstr ""
"ロケーションの更新について詳しくは、`資料 <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-location#update-location>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:200
msgid "Append/Clear ErrorCodes - gateway"
msgstr ""
"ErrorCodes の付加/クリア - ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:202
msgid "Gateways can choose to notify the IBM Watson Internet of Things Platform about changes in their error status. The gateway can invoke  addErrorCode() method to add the current errorcode to Watson IoT Platform."
msgstr ""
"ゲートウェイはエラー状況の変化について IBM Watson Internet of Things Platform に通知することを選択できます。ゲートウェイは、addErrorCode() メソッドを呼び出して、現在のエラー・コードを Watson IoT Platform に追加できます。"

#: ../docs/gateways/java_managedgateway.rst:208
msgid "Also, the ErrorCodes of gateway can be cleared from IBM Watson Internet of Things Platform by calling the clearErrorCodes() method as follows:"
msgstr ""
"また、次のように clearErrorCodes() メソッドを呼び出すことにより、IBM Watson Internet of Things Platform からゲートウェイの ErrorCodes をクリアすることもできます。"

#: ../docs/gateways/java_managedgateway.rst:215
msgid "Append/Clear ErrorCodes - attached devices"
msgstr ""
"ErrorCodes の付加/クリア - 接続されているデバイス"

#: ../docs/gateways/java_managedgateway.rst:217
msgid "Similarly, the gateway can invoke the corresponding device method to add/clear the errorcodes of the attached devices,"
msgstr ""
"同様に、ゲートウェイは対応するデバイス・メソッドを呼び出して、接続されているデバイスのエラー・コードを追加/クリアすることができます。"

#: ../docs/gateways/java_managedgateway.rst:227
msgid "Append/Clear Log messages - gateway"
msgstr ""
"ログ・メッセージの付加/クリア - ゲートウェイ"

#: ../docs/gateways/java_managedgateway.rst:228
msgid "Gateways can choose to notify the IBM Watson Internet of Things Platform about changes by adding a new log entry. Log entry includes a log messages, its timestamp and severity, as well as an optional base64-encoded binary diagnostic data. The gateways can invoke addGatewayLog() method to send log messages,"
msgstr ""
"ゲートウェイは、新規ログ項目を追加することにより、変化について IBM Watson Internet of Things Platform に通知することを選択できます。ログ・エントリーには、ログ・メッセージ、タイム・スタンプと重大度、およびオプションで base64 でエンコードしたバイナリー診断データが含まれます。ゲートウェイは、addGatewayLog() メソッドを呼び出してログ・メッセージを送信できます。"

#: ../docs/gateways/java_managedgateway.rst:237
msgid "Also, the log messages can be cleared from IBM Watson Internet of Things Platform by calling the clearLogs() method as follows:"
msgstr ""
"また、次のように clearLogs() メソッドを呼び出すことにより、IBM Watson Internet of Things Platform からログ・メッセージをクリアすることもできます。"

#: ../docs/gateways/java_managedgateway.rst:244
msgid "Append/Clear Logs - attached devices"
msgstr ""
"ログの付加/クリア - 接続されているデバイス"

#: ../docs/gateways/java_managedgateway.rst:246
msgid "Similarly, the gateway can invoke the corresponding device method to add/clear the Logs of the attached devices,"
msgstr ""
"同様に、ゲートウェイは対応するデバイス・メソッドを呼び出して、接続されているデバイスのログを追加/クリアすることができます。"

#: ../docs/gateways/java_managedgateway.rst:256
msgid "and to clear the Logs of attached devices, invoke the clearDeviceLogs() method with the details of the attached device,"
msgstr ""
"そして、接続されているデバイスのログをクリアするためには、接続されているデバイスの詳細を指定して clearDeviceLogs() メソッドを呼び出します。"

#: ../docs/gateways/java_managedgateway.rst:258
msgid "..code:: java"
msgstr ""
"..code:: java"

#: ../docs/gateways/java_managedgateway.rst:260
msgid "int rc = managedGateway.clearDeviceLogs(typeId, deviceId);"
msgstr ""
"int rc = managedGateway.clearDeviceLogs(typeId, deviceId);"

#: ../docs/gateways/java_managedgateway.rst:262
msgid "The device diagnostics operations are intended to provide information on gateway/device errors, and does not provide diagnostic information relating to the devices connection to the IBM Watson Internet of Things Platform."
msgstr ""
"デバイス診断操作の目的はゲートウェイ/デバイス・エラー情報を提供することです。デバイスと IBM Watson Internet of Things Platform の接続に関連した診断情報はここでは提供されません。"

#: ../docs/gateways/java_managedgateway.rst:264
msgid "Refer to the `documentation <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-location#update-location>`__ for more information about the Diagnostics operation."
msgstr ""
"診断操作について詳しくは、`資料 <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-location#update-location>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:269
msgid "Firmware Action"
msgstr ""
"ファームウェア操作"

#: ../docs/gateways/java_managedgateway.rst:270
msgid "The firmware update process is separated into two distinct actions:"
msgstr ""
"ファームウェア更新プロセスは、2 つの別個の操作に分かれています。"

#: ../docs/gateways/java_managedgateway.rst:272
msgid "Downloading Firmware"
msgstr ""
"ファームウェアのダウンロード"

#: ../docs/gateways/java_managedgateway.rst:273
msgid "Updating Firmware."
msgstr ""
"ファームウェアの更新。"

#: ../docs/gateways/java_managedgateway.rst:275
msgid "The gateway needs to do the following activities to support Firmware Action for itself and for the attached devices:"
msgstr ""
"ゲートウェイは、それ自体および接続されているデバイスのファームウェア操作をサポートするために、次のアクティビティーを行う必要があります。"

#: ../docs/gateways/java_managedgateway.rst:277
msgid "**1. Construct DeviceFirmware Object (Optional)**"
msgstr ""
"**1. DeviceFirmware オブジェクトの構成 (オプション)**"

#: ../docs/gateways/java_managedgateway.rst:279
msgid "In order to perform Firmware action, the gateway can optionally construct a DeviceFirmware object for itself and for attached devices and add it to DeviceData as follows:"
msgstr ""
"ファームウェア操作を実行するには、次のように、ゲートウェイはオプションでそれ自体および接続されているデバイス用に DeviceFirmware オブジェクトを構成し、それを DeviceData に追加します。"

#: ../docs/gateways/java_managedgateway.rst:300
msgid "And in the case of attached devices, the constructed DeviceData can be passed to the library while sending the manage request. i.e"
msgstr ""
"そして接続されているデバイスの場合、管理リクエストを送信する際に、構成された DeviceData をライブラリーに渡すことができます。つまり、"

#: ../docs/gateways/java_managedgateway.rst:306
msgid "The DeviceFirmware object represents the current firmware of the gateway or attached device and will be used to report the status of the Firmware Download and Firmware Update actions to IBM Watson Internet of Things Platform. In case this DeviceFirmware object is not constructed by the gateway, the library creates an empty object and reports the status to Watson IoT Platform."
msgstr ""
"DeviceFirmware オブジェクトは、ゲートウェイまたは接続されているデバイスの現在のファームウェアを表しており、IBM Watson Internet of Things Platform にファームウェア・ダウンロード・アクションおよびファームウェア更新アクションの状況を報告するために使用されます。この DeviceFirmware オブジェクトがゲートウェイによって構成されていない場合、ライブラリーは空のオブジェクトを作成して、状況を Watson IoT Platform に報告します。"

#: ../docs/gateways/java_managedgateway.rst:308
msgid "**2. Inform the server about the Firmware action support**"
msgstr ""
"**2. サーバーへのファームウェア操作サポートの通知**"

#: ../docs/gateways/java_managedgateway.rst:310
msgid "The gateway/attached devices needs to set the firmware action flag to true in order for the server to initiate the firmware request. This can be achieved by passing true value for supportFirmwareActions parameter while sending the manage request."
msgstr ""
"サーバーがファームウェア・リクエストを開始するには、ゲートウェイや接続されているデバイスが、ファームウェア操作フラグを true に設定する必要があります。これは、supportFirmwareActions パラメーターに true の値を渡し、管理リクエストを送信することによって行うことができます。"

#: ../docs/gateways/java_managedgateway.rst:312
msgid "The gateway can invoke the following method to inform the server about its firmware support,"
msgstr ""
"ゲートウェイは、以下のメソッドを呼び出して、ファームウェアをサポートしていることをサーバーに通知できます。"

#: ../docs/gateways/java_managedgateway.rst:318
msgid "Similarly, the gateway can invoke the corresponding device method to inform the firmware support of attached devices,"
msgstr ""
"同様に、ゲートウェイは対応するデバイス・メソッドを呼び出して、接続されているデバイスがファームウェアをサポートしていることを通知できます。"

#: ../docs/gateways/java_managedgateway.rst:324
msgid "Once the support is informed to the DM server, the server then forwards the firmware actions to the gateway for the gateway itself/attached devices."
msgstr ""
"サポートしていることが DM サーバーにいったん通知されれば、サーバーはゲートウェイ自体や接続されているデバイスのファームウェア操作をゲートウェイに転送します。"

#: ../docs/gateways/java_managedgateway.rst:326
msgid "**3. Create the Firmware Action Handler**"
msgstr ""
"**3. ファームウェア操作ハンドラーの作成**"

#: ../docs/gateways/java_managedgateway.rst:328
msgid "In order to support the Firmware action, the gateway needs to create a handler and add it to managedGateway. The handler must extend a DeviceFirmwareHandler class and implement the following methods:"
msgstr ""
"ファームウェア操作をサポートするために、ゲートウェイでハンドラーを作成し、それを managedGateway に追加する必要があります。ハンドラーは DeviceFirmwareHandler クラスを拡張し、以下のメソッドを実装する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:335
msgid "**Note**: There must be only one handler added to the library for both the gateway and attached devices where the firmware download/update requests will be redirected. The implementation must create a thread (possibly a pool of threads) to handle multiple firmware requests at the same time. A sample handler implementation with a threadpool is `demonstrated here <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__"
msgstr ""
"**注**: ファームウェアのダウンロード/更新のリクエストを転送するゲートウェイおよび接続されているデバイスの両方に対して、ライブラリーは 1 つのハンドラーだけを追加する必要があります。実装では、複数のファームウェア・リクエストを同時に処理するためのスレッド (おそらく複数のスレッドのプール) を作成する必要があります。スレッドプールのあるハンドラー実装のサンプルは、`ここに示されています <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__"

#: ../docs/gateways/java_managedgateway.rst:337
msgid "**3.1 Sample implementation of downloadFirmware**"
msgstr ""
"**3.1 downloadFirmware のサンプル実装**"

#: ../docs/gateways/java_managedgateway.rst:339
msgid "The implementation must add a logic to download the firmware and report the status of the download via DeviceFirmware object. If the Firmware Download operation is successful, then the state of the firmware to be set to DOWNLOADED and UpdateStatus should be set to SUCCESS."
msgstr ""
"実装では、ファームウェアをダウンロードして DeviceFirmware オブジェクト経由でダウンロードの状況を報告するロジックを追加する必要があります。ファームウェア・ダウンロード操作が正常に完了した場合、ファームウェアの状態を DOWNLOADED に設定する必要があり、UpdateStatus を SUCCESS に設定する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:341
msgid "If an error occurs during Firmware Download the state should be set to IDLE and updateStatus should be set to one of the error status values:"
msgstr ""
"ファームウェア・ダウンロード中にエラーが発生した場合、状態を IDLE に設定する必要があり、updateStatus が以下のエラー状態値のいずれかになるように設定する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:343
#: ../docs/gateways/java_managedgateway.rst:441
msgid "OUT_OF_MEMORY"
msgstr ""
"OUT_OF_MEMORY"

#: ../docs/gateways/java_managedgateway.rst:344
msgid "CONNECTION_LOST"
msgstr ""
"CONNECTION_LOST"

#: ../docs/gateways/java_managedgateway.rst:345
msgid "INVALID_URI"
msgstr ""
"INVALID_URI"

#: ../docs/gateways/java_managedgateway.rst:347
msgid "A sample Firmware Download implementation is shown below, (The below code doesn't include the threadpool part, refer to the `github sample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__  for the complete implementation of the FirmwareHandler)."
msgstr ""
"ファームウェア・ダウンロード実装のサンプルが以下に示されています。(以下のコードにはスレッドプールの部分が含まれていません。FirmwareHandler の完全な実装については、`github サンプル <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__  を参照してください。)"

#: ../docs/gateways/java_managedgateway.rst:406
msgid "Gateway can check the integrity of the downloaded firmware image using the verifier and report the status back to IBM Watson Internet of Things Platform. The verifier can be set by the gateway during the startup (while creating the DeviceFirmware Object) or as part of the Download Firmware request by the application. A sample code to verify the same is below:"
msgstr ""
"ゲートウェイでは、ダウンロードしたファームウェア・イメージの整合性をベリファイヤーを使用して検査し、その状況を IBM Watson Internet of Things Platform に報告できます。ベリファイヤーは、開始時 (DeviceFirmware オブジェクトの作成中) にゲートウェイで設定することもできますし、アプリケーションでファームウェア・ダウンロード・リクエストの一部として設定することもできます。同一性を検証するサンプル・コードを以下に示します。"

#: ../docs/gateways/java_managedgateway.rst:433
#: ../docs/gateways/java_managedgateway.rst:477
msgid "The complete code can be found in the gateway management sample `GatewayFirmwareHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__."
msgstr ""
"コード全体は、ゲートウェイ管理サンプル `GatewayFirmwareHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__ にあります。"

#: ../docs/gateways/java_managedgateway.rst:435
msgid "**3.2 Sample implementation of updateFirmware**"
msgstr ""
"**3.2 updateFirmware のサンプル実装**"

#: ../docs/gateways/java_managedgateway.rst:437
msgid "The implementation must create a separate thread and add a logic to install the downloaded firmware and report the status of the update via DeviceFirmware object. If the Firmware Update operation is successful, then the state of the firmware should to be set to IDLE and UpdateStatus should be set to SUCCESS."
msgstr ""
"実装では、別のスレッドを作成して、ダウンロードされたファームウェアをインストールして DeviceFirmware オブジェクト経由で更新の状況を報告するロジックを追加する必要があります。ファームウェア更新操作が正常に完了した場合、ファームウェアの状態を IDLE に設定する必要があり、UpdateStatus を SUCCESS に設定する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:439
msgid "If an error occurs during Firmware Update, updateStatus should be set to one of the error status values:"
msgstr ""
"ファームウェア更新中にエラーが発生した場合、updateStatus が以下のエラー状態値のいずれかになるように設定する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:442
msgid "UNSUPPORTED_IMAGE"
msgstr ""
"UNSUPPORTED_IMAGE"

#: ../docs/gateways/java_managedgateway.rst:444
msgid "A sample Firmware Update implementation for a Raspberry Pi device is shown below:"
msgstr ""
"Raspberry Pi デバイスのファームウェア更新のサンプル実装を以下に示します。"

#: ../docs/gateways/java_managedgateway.rst:479
msgid "**4. Add the handler to ManagedGateway**"
msgstr ""
"**4. ManagedGateway へのハンドラーの追加**"

#: ../docs/gateways/java_managedgateway.rst:481
msgid "The created handler needs to be added to the ManagedGateway instance so that the WIoTP client library invokes the corresponding method when there is a Firmware action request from IBM Watson Internet of Things Platform."
msgstr ""
"IBM Watson Internet of Things Platform からファームウェア操作リクエストが出されたときに WIoTP クライアント・ライブラリーが対応するメソッドを呼び出すように、作成されたハンドラーを ManagedGateway インスタンスに追加する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:488
msgid "Refer to `this page <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/requests.html#/firmware-actions#firmware-actions>`__ for more information about the Firmware action."
msgstr ""
"ファームウェア操作について詳しくは、`このページ <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/requests.html#/firmware-actions#firmware-actions>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:493
msgid "Device Actions"
msgstr ""
"デバイス操作"

#: ../docs/gateways/java_managedgateway.rst:494
msgid "The IBM Watson Internet of Things Platform supports the following device actions:"
msgstr ""
"IBM Watson Internet of Things Platform は、以下のデバイス操作をサポートしています。"

#: ../docs/gateways/java_managedgateway.rst:496
msgid "Reboot"
msgstr ""
"リブート"

#: ../docs/gateways/java_managedgateway.rst:497
msgid "Factory Reset"
msgstr ""
"工場出荷時設定にリセット"

#: ../docs/gateways/java_managedgateway.rst:499
msgid "The gateway needs to do the following activities to support Device Actions for itself and for the attached devices:"
msgstr ""
"ゲートウェイは、それ自体および接続されているデバイスのデバイス操作をサポートするために、次のアクティビティーを行う必要があります。"

#: ../docs/gateways/java_managedgateway.rst:501
msgid "**1. Inform server about the Device Actions support**"
msgstr ""
"**1. サーバーへのデバイス操作サポートの通知**"

#: ../docs/gateways/java_managedgateway.rst:503
msgid "In order to perform Reboot or Factory Reset action for itself and attached devices, the gateway needs to inform the IBM Watson Internet of Things Platform about the support first. This can be achieved by passing true value for supportDeviceActions parameter while sending the manage request."
msgstr ""
"それ自体および接続されているデバイスのためにリブートや工場出荷時設定へのリセットのアクションを実行するには、まずゲートウェイがそのサポートについて IBM Watson Internet of Things Platform に通知する必要があります。これは、supportDeviceActions パラメーターに true の値を渡し、管理リクエストを送信することによって行うことができます。"

#: ../docs/gateways/java_managedgateway.rst:505
msgid "The gateway can invoke the following method to inform the server about its device action support,"
msgstr ""
"ゲートウェイは、以下のメソッドを呼び出して、デバイス操作をサポートしていることをサーバーに通知できます。"

#: ../docs/gateways/java_managedgateway.rst:511
msgid "Similarly, the gateway can invoke the corresponding device method to inform the device action support of attached devices,"
msgstr ""
"同様に、ゲートウェイは対応するデバイス・メソッドを呼び出して、接続されているデバイスがデバイス操作をサポートしていることを通知できます。"

#: ../docs/gateways/java_managedgateway.rst:517
msgid "Once the support is informed to the DM server, the server then forwards the device action requests to the device."
msgstr ""
"サポートしていることが DM サーバーにいったん通知されれば、デバイス操作リクエストをデバイスに転送します。"

#: ../docs/gateways/java_managedgateway.rst:519
msgid "**2. Create the Device Action Handler**"
msgstr ""
"**2. デバイス操作ハンドラーの作成**"

#: ../docs/gateways/java_managedgateway.rst:521
msgid "In order to support the device action, the gateway needs to create a handler and add it to managedGateway instance. The handler must extend a DeviceActionHandler class and provide implementation for the following methods:"
msgstr ""
"デバイス操作をサポートするために、ゲートウェイでハンドラーを作成し、それを managedGateway インスタンスに追加する必要があります。ハンドラーは DeviceActionHandler クラスを拡張し、以下のメソッドを実装する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:528
msgid "**Note:** There must be only one handler added to the library for both the gateway and attached devices where the device action requests will be redirected. The implementation must create a thread (possibly a pool of threads) to handle multiple device action requests at the same time. A sample handler implementation with a threadpool is `demonstrated here <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__."
msgstr ""
"**注**: デバイス操作のリクエストを転送するゲートウェイおよび接続されているデバイスの両方に対して、ライブラリーは 1 つのハンドラーだけを追加する必要があります。実装では、複数のデバイス操作リクエストを同時に処理するためのスレッド (おそらく複数のスレッドのプール) を作成する必要があります。スレッドプールのあるハンドラー実装のサンプルは、`ここに示されています <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__。"

#: ../docs/gateways/java_managedgateway.rst:530
msgid "**2.1 Sample implementation of handleReboot**"
msgstr ""
"**2.1 handleReboot のサンプル実装**"

#: ../docs/gateways/java_managedgateway.rst:532
msgid "The implementation must create a separate thread and add a logic to reboot the gateway/attached device and report the status of the reboot via DeviceAction object. Upon receiving the request, the gateway first needs to inform the server about the support(or failure) before proceeding with the actual reboot. And if the sample can not reboot the device or any other error during the reboot, the gateway can update the status along with an optional message. A sample reboot implementation for a Raspberry Pi device is shown below (The below code doesn't include the threadpool part, refer to the `github location <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__ for the complete implementation of a sample device action handler)."
msgstr ""
"実装では、別のスレッドを作成して、ゲートウェイおよび接続されているデバイスをリブートして DeviceAction オブジェクト経由でリブートの状況を報告するロジックを追加する必要があります。リクエストを受け取ると、ゲートウェイは実際のリブートを進める前に、まずサーバーにサポート (または失敗) について通知する必要があります。そしてサンプルがデバイスをリブートできないか、ブート中に他のエラーが生じた場合には、ゲートウェイが状況を更新して、オプションのメッセージを出すことができます。Raspberry Pi デバイスのリブート実装のサンプルが以下に示されています (以下のコードにはスレッドプールの部分が含まれていません。サンプルのデバイス操作ハンドラーの完全な実装については、`github ロケーション <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__ を参照してください)。"

#: ../docs/gateways/java_managedgateway.rst:555
msgid "The complete code can be found in the device management sample `GatewayActionHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__."
msgstr ""
"コード全体は、デバイス管理サンプル `GatewayActionHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__ にあります。"

#: ../docs/gateways/java_managedgateway.rst:557
msgid "**2.2 Sample implementation of handleFactoryReset**"
msgstr ""
"**2.2 handleFactoryReset のサンプル実装**"

#: ../docs/gateways/java_managedgateway.rst:559
msgid "The implementation must create a separate thread and add a logic to reset the gateway/attached device to factory settings and report the status of the reset via DeviceAction object. Upon receiving the request, the gateway first needs to inform the server about the support(or failure) before proceeding with the actual reset. The skeleton of the Factory Reset implementation is shown below:"
msgstr ""
"実装では、別のスレッドを作成して、ゲートウェイおよび接続されているデバイスを工場出荷時設定にリセットして DeviceAction オブジェクト経由でリセットの状況を報告するロジックを追加する必要があります。リクエストを受け取ると、ゲートウェイは実際のリセットを進める前に、まずサーバーにサポート (または失敗) について通知する必要があります。工場出荷時設定にリセット実装のスケルトンを以下に示します。"

#: ../docs/gateways/java_managedgateway.rst:574
msgid "**3. Add the handler to ManagedGateway**"
msgstr ""
"**3. ManagedGateway へのハンドラーの追加**"

#: ../docs/gateways/java_managedgateway.rst:576
msgid "The created handler needs to be added to the ManagedGateway instance so that the WIoTP client library invokes the corresponding method when there is a device action request for this gateway or attached devices, from IBM Watson Internet of Things Platform."
msgstr ""
"IBM Watson Internet of Things Platform からこのゲートウェイまたは接続されているデバイスのデバイス操作リクエストが出されたときに WIoTP クライアント・ライブラリーが対応するメソッドを呼び出すように、作成されたハンドラーを ManagedGateway インスタンスに追加する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:583
msgid "Refer to `this page <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/requests.html#/device-actions-reboot#device-actions-reboot>`__ for more information about the Device Action."
msgstr ""
"デバイス操作について詳しくは、`このページ <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/requests.html#/device-actions-reboot#device-actions-reboot>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:588
msgid "Listen for Device attribute changes"
msgstr ""
"デバイス属性の変更の listen"

#: ../docs/gateways/java_managedgateway.rst:590
msgid "This WIoTP client library updates the corresponding objects whenever there is an update request from the IBM Watson Internet of Things Platform, these update requests are initiated by the application either directly or indirectly (Firmware Update) via the IBM Watson Internet of Things Platform ReST API. Apart from updating these attributes, the library provides a mechanism where the gateway can be notified whenever a device attribute is updated."
msgstr ""
"この WIoTP クライアント・ライブラリーは、IBM Watson Internet of Things Platform から更新リクエストが送られるたびに、対応するオブジェクトを更新します。このような更新リクエストは、アプリケーションから直接開始されるか、IBM Watson Internet of Things Platform の ReST API を使用して間接的に開始されます (ファームウェア更新)。ライブラリーは、これらの属性を更新するだけでなく、デバイス属性の更新時にゲートウェイに通知できるようにするための機構も提供します。"

#: ../docs/gateways/java_managedgateway.rst:592
msgid "Attributes that can be updated by this operation are location, metadata, device information and firmware of the gateway/attached devices."
msgstr ""
"この操作によって更新できる属性は、ゲートウェイや接続されているデバイスのロケーション、メタデータ、デバイス情報、およびファームウェアです。"

#: ../docs/gateways/java_managedgateway.rst:594
msgid "In order to get notified, the gateway needs to add a property change listener on those objects that it is interested."
msgstr ""
"通知を受けるには、ゲートウェイは、対象となるオブジェクトに対するプロパティー変更リスナーを追加する必要があります。"

#: ../docs/gateways/java_managedgateway.rst:603
msgid "Also, the gateway needs to implement the propertyChange() method where it receives the notification. A sample implementation is as follows:"
msgstr ""
"また、ゲートウェイは、通知を受け取る propertyChange() メソッドを実装する必要もあります。サンプル実装は、次のとおりです。"

#: ../docs/gateways/java_managedgateway.rst:636
msgid "Refer to `this page <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-device-attributes#update-device-attributes>`__ for more information about updating the device attributes."
msgstr ""
"デバイス属性の更新について詳しくは、`このページ <https://docs.internetofthings.ibmcloud.com/devices/device_mgmt/index.html#/update-device-attributes#update-device-attributes>`__ を参照してください。"

#: ../docs/gateways/java_managedgateway.rst:641
msgid "Examples"
msgstr ""
"例"

#: ../docs/gateways/java_managedgateway.rst:642
msgid "`ManagedRasPiGateway <https://github.com/ibm-messaging/gateway-samples/blob/master/java/gateway-samples/src/main/java/com/ibm/iotf/sample/client/gateway/devicemgmt/ManagedRasPiGateway.java>`__ - Gateway Device Management(DM) capabilities are demonstrated in this sample by managing the Arduino Uno device through the Raspberry Pi Gateway. If you do not have Raspberry Pi and Arduino UNO, don’t worry, you can still follow the sample to connect your device as a gateway and manage one or more attached devices."
msgstr ""
"`ManagedRasPiGateway <https://github.com/ibm-messaging/gateway-samples/blob/master/java/gateway-samples/src/main/java/com/ibm/iotf/sample/client/gateway/devicemgmt/ManagedRasPiGateway.java>`__ - Gateway Device Management(DM) 機能は、このサンプルでは、Raspberry Pi ゲートウェイによって Arduino Uno デバイスを管理することにより示されます。Raspberry Pi と Arduino UNO がない場合でも、サンプルに従ってデバイスをゲートウェイとして接続し、接続されている 1 つ以上のデバイスを管理することができますのでご安心ください。"

#: ../docs/gateways/java_managedgateway.rst:643
msgid "`HomeGatewaySample <https://github.com/ibm-messaging/gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/HomeGatewaySample.java>`__ - A home gateway sample that manages few attached home devices like, Lights, Switches, Elevator, Oven and OutdoorTemperature."
msgstr ""
"`HomeGatewaySample <https://github.com/ibm-messaging/gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/HomeGatewaySample.java>`__ - 接続された少数のホーム・デバイス (照明、スイッチ、エレベーター、オーブン、外気温など) を管理するホーム・ゲートウェイ・サンプル。"

#: ../docs/gateways/java_managedgateway.rst:644
msgid "`GatewayFirmwareHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__ - A sample implementation of FirmwareHandler."
msgstr ""
"`GatewayFirmwareHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayFirmwareHandlerSample.java>`__ - FirmwareHandler のサンプル実装。"

#: ../docs/gateways/java_managedgateway.rst:645
msgid "`GatewayActionHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__ - A sample implementation of DeviceActionHandler."
msgstr ""
"`GatewayActionHandlerSample <https://github.com/ibm-messaging/iot-gateway-samples/blob/master/java/advanced-gateway-sample/src/main/java/com/ibm/iotf/sample/gateway/GatewayActionHandlerSample.java>`__ - DeviceActionHandler のサンプル実装。"

#: ../docs/gateways/java_managedgateway.rst:650
msgid "Recipe"
msgstr ""
"レシピ"

#: ../docs/gateways/java_managedgateway.rst:652
msgid "Refer to `the recipe <https://developer.ibm.com/recipes/tutorials/raspberry-pi-as-managed-gateway-in-watson-iot-platform-part-1/>`__ that shows how to connect Raspberry Pi as Managed Gateway to IBM Watson IoT Platform and manage the attached devices. For example, update Arduino Uno device with a new sketch program, reboot Arduino Uno using the Watson IoT Platform device management protocol and etc.."
msgstr ""
"Raspberry Pi デバイスを管理対象ゲートウェイとして IBM Watson IoT Platform に接続し、接続されているデバイスを管理する方法を示す、`レシピ <https://developer.ibm.com/recipes/tutorials/raspberry-pi-as-managed-gateway-in-watson-iot-platform-part-1/>`__ を参照してください。例えば、新しいスケッチ・プログラムによって Arduino Uno デバイスを更新したり、Watson IoT Platform デバイス管理プロトコルを使用して Arduino Uno をリブートしたりします。"

