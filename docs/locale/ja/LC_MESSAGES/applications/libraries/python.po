# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/python.rst:2
msgid "Python for Application Developers"
msgstr ""
"アプリケーション開発者用の Python"

#: ../docs/applications/libraries/python.rst:4
msgid "See `iot-python <https://github.com/ibm-messaging/iot-python>`_ in GitHub"
msgstr ""
"GitHub の `iot-python <https://github.com/ibm-messaging/iot-python>`_ を参照してください。"

#: ../docs/applications/libraries/python.rst:5
msgid "See `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ on PyPi"
msgstr ""
"PyPi の `ibmiotf <https://pypi.python.org/pypi/ibmiotf>`_ を参照してください。"

#: ../docs/applications/libraries/python.rst:8
msgid "Constructor"
msgstr ""
"コンストラクター"

#: ../docs/applications/libraries/python.rst:10
msgid "The constructor builds the client instance, and accepts an options dict containing the following definitions:"
msgstr ""
"コンストラクターはクライアント・インスタンスを構築し、以下の定義を含む options dict を受け入れます。"

#: ../docs/applications/libraries/python.rst:12
msgid "``org`` - Your organization ID."
msgstr ""
"``org`` - 組織 ID。"

#: ../docs/applications/libraries/python.rst:13
msgid "``id`` - The unique ID of your application within your organization."
msgstr ""
"``id`` - 組織内のアプリケーションの固有 ID。"

#: ../docs/applications/libraries/python.rst:14
msgid "``auth-method`` - Method of authentication (the only value currently supported is ``apikey``)."
msgstr ""
"``auth-method`` - 認証方式 (現在サポートされている値は「apikey」のみ)。"

#: ../docs/applications/libraries/python.rst:15
msgid "``auth-key`` - API key (required if auth-method is ``apikey``)."
msgstr ""
"``auth-key`` - API キー (auth-method が「apikey」である場合に必須)。"

#: ../docs/applications/libraries/python.rst:16
msgid "``auth-token`` - API key token (required if auth-method is ``apikey``)."
msgstr ""
"``auth-token`` - API キー・トークン (auth-method が「apikey」である場合に必須)。"

#: ../docs/applications/libraries/python.rst:18
msgid "If no options dict is provided, the client will connect to the IoT Platform Quickstart, and default to an unregistered device. The options dict creates definitions which are used to interact with the IoT Platform module."
msgstr ""
"options dict が指定されていないと、クライアントは IoT Platform Quickstart に接続し、デフォルトで未登録デバイスになります。options dict は IoT Platform モジュールと対話するために使用する定義を作成します。"

#: ../docs/applications/libraries/python.rst:37
msgid "Using a configuration file"
msgstr ""
"構成ファイルの使用"

#: ../docs/applications/libraries/python.rst:39
msgid "If you are not using an options dict as shown above, you include a configuration file containing an options dict. If you are using a configuration file containing an options dict, use the following code format."
msgstr ""
"options dict を上記のように使用していない場合、options dict を含んでいる構成ファイルを組み込みます。options dict を含んでいる構成ファイルを使用している場合、以下のコード形式を使用してください。"

#: ../docs/applications/libraries/python.rst:50
msgid "The application configuration file must be in the following format:"
msgstr ""
"アプリケーション構成ファイルは、以下の形式でなければなりません。"

#: ../docs/applications/libraries/python.rst:66
msgid "API calls"
msgstr ""
"API 呼び出し"

#: ../docs/applications/libraries/python.rst:68
msgid "Each method in the APIClient responds with either a valid response (JSON or boolean) in the case of success or IoTFCReSTException in the case of failure. The IoTFCReSTException contains the following properties that application can parse to get more information about the failure."
msgstr ""
"APIClient の各メソッドは、成功した場合は有効な応答 (JSON またはブール値)、失敗した場合は IoTFCReSTException で応答します。IoTFCReSTException には、アプリケーションが失敗の詳細情報を取得するために解析できる、次のプロパティーが含まれます。"

#: ../docs/applications/libraries/python.rst:70
msgid "httpcode - HTTP Status Code"
msgstr ""
"httpcode - HTTP 状況コード"

#: ../docs/applications/libraries/python.rst:71
msgid "message - Exception message containing the reason for the failure"
msgstr ""
"message - 失敗の理由を含む例外メッセージ"

#: ../docs/applications/libraries/python.rst:72
msgid "response - JsonElement containing the partial response if any otherwise null"
msgstr ""
"response - 部分的な応答がある場合はそれを含む JsonElement。それ以外の場合は null です。"

#: ../docs/applications/libraries/python.rst:74
msgid "So in the case of failure, application needs to parse the response to see if the action is partially successful or not."
msgstr ""
"失敗した場合、アプリケーションは応答を解析して、アクションが部分的に成功したかどうかを確認する必要があります。"

#: ../docs/applications/libraries/python.rst:81
msgid "Subscribing to device events"
msgstr ""
"デバイス・イベントへのサブスクライブ"

#: ../docs/applications/libraries/python.rst:82
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"イベントは、デバイスが IoT Platform にデータをパブリッシュするためのメカニズムです。デバイスはイベントのコンテンツを制御し、送信するイベントごとに名前を割り当てます。"

#: ../docs/applications/libraries/python.rst:84
msgid "When an event is received by the IoT Platform the credentials of the connection on which the event was received are used to determine from which device the event was sent. With this architecture it is impossible for a device to impersonate another device."
msgstr ""
"IoT Platform は、イベントを受け取ると、そのイベントを受け取った接続の資格情報に基づいて、イベントの送信元のデバイスを特定します。このアーキテクチャーにより、デバイスは別のデバイスの偽名を使用することが不可能になります。"

#: ../docs/applications/libraries/python.rst:86
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"デフォルトでは、アプリケーションはすべての接続デバイスの全イベントをサブスクライブします。type、id、event、および msgFormat パラメーターを使用して、サブスクリプションのスコープを制御します。単一のクライアントで複数のサブスクリプションをサポートできます。以下のコード・サンプルは、デバイスの type、id、event、および msgFormat パラメーターに基づいてデバイスをサブスクライブする方法の例を示しています。"

#: ../docs/applications/libraries/python.rst:90
msgid "To subscribe to all events from all devices"
msgstr ""
"すべてのデバイスの全イベントをサブスクライブする場合"

#: ../docs/applications/libraries/python.rst:104
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"特定のタイプのすべてのデバイスの全イベントをサブスクライブする場合"

#: ../docs/applications/libraries/python.rst:118
msgid "To subscribe to a specific event from all devices"
msgstr ""
"すべてのデバイスの特定のイベントをサブスクライブする場合"

#: ../docs/applications/libraries/python.rst:132
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"複数の異なるデバイスの特定のイベントをサブスクライブする場合"

#: ../docs/applications/libraries/python.rst:147
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"json 形式でデバイスがパブリッシュした全イベントをサブスクライブする場合"

#: ../docs/applications/libraries/python.rst:164
msgid "Handling events from devices"
msgstr ""
"デバイスのイベントの処理"

#: ../docs/applications/libraries/python.rst:165
msgid "To process the events received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Event class:"
msgstr ""
"サブスクリプションによって受信したイベントを処理するには、イベント・コールバック・メソッドを登録する必要があります。メッセージは、以下の Event クラスのインスタンスとして返されます。"

#: ../docs/applications/libraries/python.rst:167
msgid "event.device - string (uniquely identifies the device across all types of devices in the organization)"
msgstr ""
"event.device - ストリング (組織内のあらゆるタイプのデバイスを固有に識別)"

#: ../docs/applications/libraries/python.rst:168
msgid "event.deviceType - string"
msgstr ""
"event.deviceType - ストリング"

#: ../docs/applications/libraries/python.rst:169
msgid "event.deviceId - string"
msgstr ""
"event.deviceId - ストリング"

#: ../docs/applications/libraries/python.rst:170
msgid "event.event - string"
msgstr ""
"event.event - ストリング"

#: ../docs/applications/libraries/python.rst:171
msgid "event.format - string"
msgstr ""
"event.format - ストリング"

#: ../docs/applications/libraries/python.rst:172
msgid "event.data - dict"
msgstr ""
"event.data - dict"

#: ../docs/applications/libraries/python.rst:173
msgid "event.timestamp - datetime"
msgstr ""
"event.timestamp - 日時"

#: ../docs/applications/libraries/python.rst:196
msgid "Subscribing to device status"
msgstr ""
"デバイス・ステータスへのサブスクライブ"

#: ../docs/applications/libraries/python.rst:197
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"デフォルトで、これはすべての接続デバイスのステータスの更新をサブスクライブします。type および id パラメーターを使用して、サブスクリプションのスコープを制御します。単一のクライアントで複数のサブスクリプションをサポートできます。"

#: ../docs/applications/libraries/python.rst:200
msgid "Subscribe to status updates for all devices"
msgstr ""
"すべてのデバイスのステータス更新をサブスクライブ"

#: ../docs/applications/libraries/python.rst:214
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"特定のタイプのすべてのデバイスのステータス更新をサブスクライブ"

#: ../docs/applications/libraries/python.rst:228
msgid "Subscribe to status updates for two different devices"
msgstr ""
"2 つの異なるデバイスのステータス更新をサブスクライブ"

#: ../docs/applications/libraries/python.rst:246
msgid "Handling status updates from devices"
msgstr ""
"デバイスのステータス更新の処理"

#: ../docs/applications/libraries/python.rst:247
msgid "To process the status updates received by your subscriptions you need to register an event callback method. The messages are returned as an instance of the Status class:"
msgstr ""
"サブスクリプションによって受信したステータス更新を処理するには、イベント・コールバック・メソッドを登録する必要があります。メッセージは、以下の Status クラスのインスタンスとして返されます。"

#: ../docs/applications/libraries/python.rst:249
msgid "The following properties are set for both \"Connect\" and \"Disconnect\" status events:"
msgstr ""
"以下のプロパティーは、\"Connect\" と \"Disconnect\" 両方のステータス・イベントで設定されます。"

#: ../docs/applications/libraries/python.rst:251
msgid "status.clientAddr - string"
msgstr ""
"status.clientAddr - ストリング"

#: ../docs/applications/libraries/python.rst:252
msgid "status.protocol - string"
msgstr ""
"status.protocol - ストリング"

#: ../docs/applications/libraries/python.rst:253
msgid "status.clientId - string"
msgstr ""
"status.clientId - ストリング"

#: ../docs/applications/libraries/python.rst:254
msgid "status.user - string"
msgstr ""
"status.user - ストリング"

#: ../docs/applications/libraries/python.rst:255
msgid "status.time - datetime"
msgstr ""
"status.time - 日時"

#: ../docs/applications/libraries/python.rst:256
msgid "status.action - string"
msgstr ""
"status.action - ストリング"

#: ../docs/applications/libraries/python.rst:257
msgid "status.connectTime - datetime"
msgstr ""
"status.connectTime - 日時"

#: ../docs/applications/libraries/python.rst:258
msgid "status.port - integer"
msgstr ""
"status.port - 整数"

#: ../docs/applications/libraries/python.rst:260
msgid "The following properties are only set when the action is \"Disconnect\":"
msgstr ""
"以下のプロパティーは、アクションが \"Disconnect\" である場合にのみ設定されます。"

#: ../docs/applications/libraries/python.rst:262
msgid "status.writeMsg - integer"
msgstr ""
"status.writeMsg - 整数"

#: ../docs/applications/libraries/python.rst:263
msgid "status.readMsg - integer"
msgstr ""
"status.readMsg - 整数"

#: ../docs/applications/libraries/python.rst:264
msgid "status.reason - string"
msgstr ""
"status.reason - ストリング"

#: ../docs/applications/libraries/python.rst:265
msgid "status.readBytes - integer"
msgstr ""
"status.readBytes - 整数"

#: ../docs/applications/libraries/python.rst:266
msgid "status.writeBytes - integer"
msgstr ""
"status.writeBytes - 整数"

#: ../docs/applications/libraries/python.rst:292
msgid "Publishing events from devices"
msgstr ""
"デバイスのイベントのパブリッシュ"

#: ../docs/applications/libraries/python.rst:293
msgid "Applications can publish events as if they originated from a Device"
msgstr ""
"アプリケーションは、イベントをデバイスから発信されたかのようにパブリッシュできます。"

#: ../docs/applications/libraries/python.rst:311
msgid "Publishing commands to devices"
msgstr ""
"コマンドをデバイスにパブリッシュ"

#: ../docs/applications/libraries/python.rst:312
msgid "Applications can publish commands to connected devices"
msgstr ""
"アプリケーションはコマンドを接続デバイスにパブリッシュできます"

#: ../docs/applications/libraries/python.rst:330
msgid "Organization details"
msgstr ""
"組織の詳細"

#: ../docs/applications/libraries/python.rst:332
msgid "Applications can use the ``getOrganizationDetails()`` method to retrieve the details about the configuration of the organization."
msgstr ""
"アプリケーションは、``getOrganizationDetails()`` メソッドを使用して組織の構成の詳細情報を取得できます。"

#: ../docs/applications/libraries/python.rst:347
msgid "Refer to the Organization Configuration section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the request & response model and http status code."
msgstr ""
"要求と応答のモデル、および HTTP 状況コードについての情報は、`「IBM IoT Platform API」の「組織の構成」セクション<https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__を参照してください。"

#: ../docs/applications/libraries/python.rst:355
msgid "Bulk device operations"
msgstr ""
"デバイスの一括操作"

#: ../docs/applications/libraries/python.rst:357
msgid "Applications can use bulk operations to get, add or remove devices in bulk."
msgstr ""
"アプリケーションは、一括操作を使用すると、デバイスを一括で取得、追加、または削除できます。"

#: ../docs/applications/libraries/python.rst:359
msgid "Refer to the Bulk Operations section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"照会パラメーター、要求と応答のモデル、および HTTP 状況コードのリストについての情報は、`「IBM IoT Platform API」の「一括操作 (Bulk Operations)」<https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Bulk_Operations/>`__を参照してください。"

#: ../docs/applications/libraries/python.rst:362
msgid "Retrieve device information"
msgstr ""
"デバイス情報の取得"

#: ../docs/applications/libraries/python.rst:364
msgid "Bulk device information can be retrieved using the ``getAllDevices()`` method. This method retrieves information on all registered devices in the organization, each request can contain a maximum of 512KB."
msgstr ""
"``getAllDevices()`` メソッドを使用すると、一括デバイス情報を取得できます。このメソッドは、組織の登録済みのすべてのデバイスに関する情報を取得します。各要求に含められるのは最大で 512 KB です。"

#: ../docs/applications/libraries/python.rst:367
msgid "The response contains parameters required by the application to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further calls, for example, the ``_bookmark`` element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"応答には、応答からのディクショナリーの *results* を取得して返されるデバイスの配列を取得するために、アプリケーションで必要なパラメーターが含まれます。応答のその他のパラメーターは、さらに呼び出しを実行する場合に必要になります。例えば、``_bookmark`` 要素を使用して結果のページ送りを実行したりできます。最初の要求はブックマークを指定しないで発行し、次に応答で返されるブックマークを取得して、次のページの要求で指定します。ブックマークがなくなることで示される結果セットの終わりまで繰り返します。各要求は、他のパラメーターと同じ値を正確に使用する必要があります。そうしないと結果が未定義になります。"

#: ../docs/applications/libraries/python.rst:389
msgid "Add Devices in bulk"
msgstr ""
"デバイスの一括追加"

#: ../docs/applications/libraries/python.rst:391
msgid "The ``addMultipleDevices()`` method can be used to add one or more devices to your IoT Platform organization, the maximum size of a request is set to 512KB.  The response will contain the generated authentication tokens for each added device. These authentication tokens must be recorded when processing the response, as lost authentication tokens cannot be retrieved."
msgstr ""
"``addMultipleDevices()`` メソッドを使用すると、IoT Platform の組織に 1 つ以上のデバイスを追加できます。要求の最大サイズの設定は 512 KB です。応答には、追加された各デバイス用に生成された認証トークンが含まれます。失われた認証トークンは取得できないので、応答を処理する際にはこれらの認証トークンを記録しておく必要があります。"

#: ../docs/applications/libraries/python.rst:416
msgid "Delete Devices in bulk"
msgstr ""
"デバイスの一括削除"

#: ../docs/applications/libraries/python.rst:418
msgid "The ``deleteMultipleDevices()`` method can be used to delete multiple devices from an IoT Platform organization, each request can contain a maximum of 512KB."
msgstr ""
"``deleteMultipleDevices()`` メソッドを使用すると、複数のデバイスを IoT Platform 組織から削除できます。各要求に含められるのは最大で 512 KB です。"

#: ../docs/applications/libraries/python.rst:443
msgid "Device Type Operations"
msgstr ""
"デバイス・タイプの操作"

#: ../docs/applications/libraries/python.rst:445
msgid "Device types can be used as templates for adding device information to devices as they are added to your organization. Applications can use the IoT Platform API to list, create, delete, view, or update device types in your organization."
msgstr ""
"デバイス・タイプは、組織に追加するときにデバイス情報を追加するテンプレートとして使用できます。アプリケーションで IoT Platform API を使用して、組織のデバイス・タイプのリスト表示、作成、削除、表示、更新を実行できます。"

#: ../docs/applications/libraries/python.rst:449
msgid "Refer to the Device Types section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ documentation for information about the list of query parameters, the request & response model, and http status codes."
msgstr ""
"照会パラメーター、要求と応答のモデル、および HTTP 状況コードのリストについての情報は、`「IBM IoT Platform API」の「デバイス・タイプ (Device Types)」セクション <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ の資料を参照してください。"

#: ../docs/applications/libraries/python.rst:454
msgid "Get all Device Types"
msgstr ""
"すべてのデバイス・タイプの取得"

#: ../docs/applications/libraries/python.rst:456
msgid "The ``getAllDeviceTypes()`` method can be used to retrieve all device types in your IoT Platform organization. The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"``getAllDeviceTypes()`` メソッドを使用すると、IoT Platform の組織に含まれているすべてのデバイス・タイプを取得できます。応答にはパラメーターが含まれ、アプリケーションが応答からのディクショナリーの *results* を取得して返されるデバイスの配列を取得するために必要とします。応答のその他のパラメーターは、*_bookmark* 要素などを使用して結果をページ送りするために、さらに呼び出しを実行する場合に必要です。最初の要求はブックマークを指定しないで発行し、次に応答で返されるブックマークを取得して、次のページの要求で指定します。ブックマークがなくなることで示される結果セットの終わりまで繰り返します。各要求は、他のパラメーターと同じ値を正確に使用する必要があります。そうしないと結果が未定義になります。"

#: ../docs/applications/libraries/python.rst:485
msgid "Add a Device Type"
msgstr ""
"デバイス・タイプの追加"

#: ../docs/applications/libraries/python.rst:487
msgid "The ``addDeviceType()`` method can be used to register a device type to IoT Platform. In each request, you must first define the device information, and device metadata elements which you want to be applied to all devices of this type. The device information element is comprised of several variables, including, serial number, manufacturer, model, class, description, firmware and hardware versions, and descriptive location. The metadata element is comprised of custom variables and values which can be defined by the user."
msgstr ""
"``addDeviceType()`` メソッドを使用すると、IoT Platform にデバイス・タイプを登録できます。各要求で、最初にデバイス情報と、このタイプのすべてのデバイスに適用するデバイスのメタデータ要素を定義する必要があります。デバイス情報の要素は複数の変数から構成され、シリアル番号、製造元、モデル、クラス、説明、ファームウェアとハードウェアのバージョン、およびロケーションのわかりやすい説明が含まれます。メタデータ要素は、ユーザーが定義できるカスタムの変数と値から構成されます。"

#: ../docs/applications/libraries/python.rst:523
msgid "Delete a Device Type"
msgstr ""
"デバイス・タイプの削除"

#: ../docs/applications/libraries/python.rst:525
msgid "The ``deleteDeviceType()`` method can be used to delete a device type from your IoT Platform organization."
msgstr ""
"``deleteDeviceType()`` メソッドを使用すると、IoT Platform 組織からデバイス・タイプを削除できます。"

#: ../docs/applications/libraries/python.rst:542
msgid "Get a Device Type"
msgstr ""
"デバイス・タイプの取得"

#: ../docs/applications/libraries/python.rst:544
msgid "The ``getDeviceType()`` method retrieves information on a given device type. The ``typeId`` of the device type you wish to retrieve must be used as a parameter"
msgstr ""
"``getDeviceType()`` メソッドを使用すると、指定のデバイス・タイプの情報を取得できます。情報を取得するデバイス・タイプの ``typeId`` をパラメーターとして使用する必要があります。"

#: ../docs/applications/libraries/python.rst:561
msgid "Update a Device Type"
msgstr ""
"デバイス・タイプの更新"

#: ../docs/applications/libraries/python.rst:563
msgid "The ``updateDeviceType()`` method can be used to modify the properties of a device type. When using this method, several parameters must be defined. Firstly, the ``typeId`` of the device type to be updated must be specified, then the ``description``, ``deviceInfo``, and ``metadata`` elements."
msgstr ""
"``updateDeviceType()`` メソッドを使用すると、デバイス・タイプのプロパティーを変更できます。このメソッドを使用する場合、いくつかのパラメーターを定義する必要があります。最初に、更新するデバイス・タイプの ``typeId`` を指定してから、``description``、``deviceInfo``、``metadata`` の各要素を指定します。"

#: ../docs/applications/libraries/python.rst:599
msgid "Device operations"
msgstr ""
"デバイスの操作"

#: ../docs/applications/libraries/python.rst:601
msgid "Device operations made available through the API include listing, adding, removing, viewing, updating, viewing location and viewing  device management information of devices in an IoT Platform organization."
msgstr ""
"API により利用できるデバイスの操作には、IoT Platform 組織のデバイスのリスト、追加、削除、表示、更新、ロケーションの表示、デバイス管理情報の表示が含まれます。"

#: ../docs/applications/libraries/python.rst:603
msgid "Refer to the Device section of the `IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"照会パラメーター、要求と応答のモデル、および HTTP 状況コードのリストについての情報は、`「IoT Platform API」の「デバイス」セクション <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ を参照してください。"

#: ../docs/applications/libraries/python.rst:606
msgid "Get Devices of a particular Device Type"
msgstr ""
"特定のデバイス・タイプの取得"

#: ../docs/applications/libraries/python.rst:608
msgid "The *retrieveDevices()* method can be used to retrieve all the devices of a particular device type in an organization from IoT Platform. For example,"
msgstr ""
"*retrieveDevices()* メソッドを使用すると、IoT Platform の組織の特定のデバイス・タイプのデバイスをすべて取得できます。次に例を示します。"

#: ../docs/applications/libraries/python.rst:615
msgid "The response contains parameters and application needs to retrieve the dictionary *results* from the response to get the array of devices returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"応答にはパラメーターが含まれ、アプリケーションが応答からのディクショナリーの *results* を取得して返されるデバイスの配列を取得するために必要とします。応答のその他のパラメーターは、*_bookmark* 要素などを使用して結果をページ送りするために、さらに呼び出しを実行する場合に必要です。最初の要求はブックマークを指定しないで発行し、次に応答で返されるブックマークを取得して、次のページの要求で指定します。ブックマークがなくなることで示される結果セットの終わりまで繰り返します。各要求は、他のパラメーターと同じ値を正確に使用する必要があります。そうしないと結果が未定義になります。"

#: ../docs/applications/libraries/python.rst:617
#: ../docs/applications/libraries/python.rst:889
msgid "In order to pass the *_bookmark* or any other condition, the overloaded method must be used. The overloaded method takes the parameters in the form of dictionary as shown below,"
msgstr ""
"*_bookmark* またはその他の条件を渡すには、多重定義されたメソッドを使用する必要があります。多重定義されたメソッドは、以下に示すディクショナリーの形式でパラメーターを取得します。"

#: ../docs/applications/libraries/python.rst:623
msgid "The above snippet sorts the response based on device id and uses the bookmark to page through the results."
msgstr ""
"上記のスニペットは、デバイス ID に基づいて応答をソートし、ブックマークを使用して結果をページ送りします。"

#: ../docs/applications/libraries/python.rst:626
msgid "Add a Device"
msgstr ""
"デバイスの追加"

#: ../docs/applications/libraries/python.rst:628
msgid "The *registerDevice()* method is used to add a device to an IoT Platform organization. The *registerDevice()* method adds a single device to your IoT Platform organization. The parameters which can be set when adding a device are:"
msgstr ""
"*registerDevice()* メソッドを使用すると、IoT Platform の組織にデバイスを追加できます。*registerDevice()* メソッドは、IoT Platform の組織にデバイスを 1 つ追加します。デバイスを追加する際に設定できるパラメーターは、次のとおりです。"

#: ../docs/applications/libraries/python.rst:630
msgid "deviceTypeId: *Optional*. Assigns a device type to the device. Where there is a clash between variables defined by the device type and variables defined by under deviceInfo, the device specific variables will take precedence."
msgstr ""
"deviceTypeId: *オプション* です。デバイス・タイプをデバイスに割り当てます。デバイス・タイプによって定義された変数と deviceInfo で定義された変数が競合する場合は、デバイス固有の変数が優先されます。"

#: ../docs/applications/libraries/python.rst:631
msgid "deviceId: *Mandatory*."
msgstr ""
"deviceId: *必須* です。"

#: ../docs/applications/libraries/python.rst:632
msgid "authToken: *Optional*. If no authentication token is supplied, one will be generated and included in the response."
msgstr ""
"authToken: *オプション* です。認証トークンが指定されない場合は生成され、応答に含められます。"

#: ../docs/applications/libraries/python.rst:633
msgid "deviceInfo: *Optional*. This parameter is optional, and can contain a number of variables, including: serialNumber, manufacturer, model, deviceClass, description, firmware and hardware versions, and descriptiveLocation."
msgstr ""
"deviceInfo: *オプション* です。このパラメーターはオプションであり、serialNumber (シリアル番号)、manufacturer (製造元)、model (モデル)、デバイス・クラス (deviceClass)、説明 (description)、ファームウェアとハードウェアのバージョン、ロケーションの分かりやすい説明 (descriptiveLocation) などの多数の変数を含めることができます。"

#: ../docs/applications/libraries/python.rst:634
msgid "metadata: *Optional*. Metadata can optionally be added in the form of custom field:value string pairs. An example is given in the code sample below."
msgstr ""
"metadata: *オプション* です。メタデータは、カスタムの field:value ストリングのペアの形式で、オプションで追加できます。以下のコード・サンプルで例を示します。"

#: ../docs/applications/libraries/python.rst:635
msgid "location: *Optional*. This parameter contains the longitude, latitude, elevation, accuracy, and mesauredDateTime variables."
msgstr ""
"location: *オプション* です。このパラメーターには、経度、緯度、高度、正確度、および mesauredDateTime の変数が含まれます。"

#: ../docs/applications/libraries/python.rst:637
msgid "For more information on the parameters presented here, and the response format and codes, please see the relevant section of `API documentation <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>`__."
msgstr ""
"ここに示すパラメーター、および応答フォーマットとコードの詳細情報は、API の資料<https://docs.internetofthings.ibmcloud.com/swagger/v0002.html#!/Devices/post_device_types_typeId_devices>__を参照してください。"

#: ../docs/applications/libraries/python.rst:639
msgid "When using the *registerDevice()* method, you must define the mandatory deviceID parameter, and any of the optional parameters you require for your device, then call the method using the parameters you've selected."
msgstr ""
"*registerDevice()* メソッドを使用する場合、必須の deviceID パラメーター、およびデバイスに要求するオプションのパラメーターを定義してから、選択したパラメーターを使用してメソッドを呼び出す必要があります。"

#: ../docs/applications/libraries/python.rst:642
#: ../docs/applications/libraries/python.rst:703
#: ../docs/applications/libraries/python.rst:746
msgid "Sample"
msgstr ""
"サンプル"

#: ../docs/applications/libraries/python.rst:644
msgid "The following code sample should be inserted after the constructor code in a .py file. This code demonstrates defining the deviceId, authToken, metadata, deviceInfo parameters, and location parameters and then using the method with those parameters and adding a device type."
msgstr ""
"次のコード・サンプルは、.py ファイルのコンストラクター・コードの後に挿入する必要があります。このコードは、deviceId、authToken、メタデータ、deviceInfo のパラメーター、およびロケーションのパラメーターの定義について示してから、これらのパラメーターと共にメソッドを使用して、デバイス・タイプを追加する方法を示します。"

#: ../docs/applications/libraries/python.rst:658
msgid "Delete a Device"
msgstr ""
"デバイスの削除"

#: ../docs/applications/libraries/python.rst:660
msgid "The *deleteDevice()* method is used to remove a device from an IoT Platform organization. When deleting a device using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*deleteDevice()* メソッドを使用すると、IoT Platform の組織からデバイスを削除できます。このメソッドを使用してデバイスを削除する場合、メソッドに指定する必要があるパラメーターは、deviceTypeId と deviceId です。"

#: ../docs/applications/libraries/python.rst:662
#: ../docs/applications/libraries/python.rst:674
msgid "The following code snippet provides an example of the format required for this method."
msgstr ""
"次のコード・スニペットは、このメソッドに必要な形式の例を示します。"

#: ../docs/applications/libraries/python.rst:670
msgid "Get a Device"
msgstr ""
"デバイスの取得"

#: ../docs/applications/libraries/python.rst:672
msgid "The *getDevice()* method can be used to retrieve a device from an IoT Platform organization. When retrieving device details using this method, the parameters which must be specified in the method are the deviceTypeId, and the deviceId."
msgstr ""
"*getDevice()* メソッドを使用すると、IoT Platform の組織のデバイスを取得できます。このメソッドを使用してデバイス詳細情報を取得する場合、メソッドに指定する必要があるパラメーターは、deviceTypeId と deviceId です。"

#: ../docs/applications/libraries/python.rst:682
msgid "Get all Devices"
msgstr ""
"すべてのデバイスの取得"

#: ../docs/applications/libraries/python.rst:684
msgid "The *getAllDevices()* method can be used to retrieve all devices within an IoT Platform organization."
msgstr ""
"*getAllDevices()* メソッドを使用すると、IoT Platform 組織内のすべてのデバイスを取得できます。"

#: ../docs/applications/libraries/python.rst:692
msgid "Update a Device"
msgstr ""
"デバイスの更新"

#: ../docs/applications/libraries/python.rst:694
msgid "The *updateDevice()* method is used to modify one or more properties of a device. Any property in the deviceInfo or metadata parameters can be updated. In order to update a device property, it must be defined above the method. The status parameter should contain \"alert\": True. The Alert property controls whether a device will display error codes in the IoT Platform user interface, and should be set by default to 'True'."
msgstr ""
"*updateDevice()* メソッドを使用すると、デバイスの 1 つ以上のプロパティーが変更されます。deviceInfo またはメタデータのパラメーターのプロパティーを更新できます。デバイスのプロパティーを更新するには、上記のメソッドで定義する必要があります。ステータス・パラメーターに \"alert\": True を含める必要があります。alert プロパティーは、デバイスが IoT Platform のユーザー・インターフェースにエラー・コードを表示するかどうかを制御します。デフォルトの設定は 'True' です。"

#: ../docs/applications/libraries/python.rst:705
msgid "In this sample, the following code identifies a specific device, and updates several properties under the deviceInfo parameter."
msgstr ""
"このサンプルでは、次のコードが特定のデバイスを識別し、deviceInfo パラメーターのいくつかのプロパティーを更新します。"

#: ../docs/applications/libraries/python.rst:714
msgid "Get Location Information"
msgstr ""
"ロケーション情報の取得"

#: ../docs/applications/libraries/python.rst:716
msgid "The *getDeviceLocation()* method can be used to retrieve the location information of a device. The parameters required for retrieving the location data are deviceTypeId and deviceId."
msgstr ""
"*getDeviceLocation()* メソッドを使用すると、デバイスのロケーション情報を取得できます。ロケーション・データの取得に必要なパラメーターは、deviceTypeId と deviceId です。"

#: ../docs/applications/libraries/python.rst:722
msgid "The response to this method contains the longitude, latitude, elevation, accuracy, measuredTimeStamp, and updatedTimeStamp properties."
msgstr ""
"このメソッドの応答には、経度、緯度、高度、正確度、measuredTimeStamp、および updatedTimeStamp のプロパティーが含まれます。"

#: ../docs/applications/libraries/python.rst:726
msgid "Update Location Information"
msgstr ""
"ロケーション情報の更新"

#: ../docs/applications/libraries/python.rst:728
msgid "The *updateDeviceLocation()* method is used to modify the location information for a device. Simlarly to updating device properties, the deviceLocation parameter must be defined with the changes you wish to apply. The code sample below demonstrates changing the location data for a given device."
msgstr ""
"*updateDeviceLocation()* メソッドを使用すると、デバイスのロケーション情報が変更されます。デバイスのプロパティーの更新と同様に、適用しようとしている変更で deviceLocation パラメーターを定義する必要があります。以下のコード・サンプルは、指定されたデバイスのロケーション・データの変更について示します。"

#: ../docs/applications/libraries/python.rst:735
msgid "If no date is supplied, the entry is added with the current date and time."
msgstr ""
"日付が指定されない場合、現在の日付と時刻を使用してエントリーが追加されます。"

#: ../docs/applications/libraries/python.rst:739
msgid "Get Device Management Information"
msgstr ""
"デバイス管理情報の取得"

#: ../docs/applications/libraries/python.rst:741
msgid "The *getDeviceManagementInformation()* method is used to get the device management information for a device. The response contains the last activity date-time, the device's dormant status (true/false), support for device and firmware actions, and firmware data. For a comprehensive list of response content, please see the relevant API documentation."
msgstr ""
"*getDeviceManagementInformation()* メソッドを使用すると、デバイスのデバイス管理情報が取得されます。応答には、最後のアクティビティーの日付/時刻、デバイスの休止状況 (true/false)、デバイスとファームウェアのアクションのサポート、およびファームウェアのデータが含まれます。応答コンテンツの総合的なリストは、関連する API 資料を参照してください。"

#: ../docs/applications/libraries/python.rst:743
msgid "The following code sample will return the device management information for a device with the deviceId \"00aabbccde03\", with deviceTypeId \"iotsample-arduino\"."
msgstr ""
"次のコード・サンプルは、deviceId \"00aabbccde03\"、deviceTypeId \"iotsample-arduino\" が指定されたデバイスのデバイス管理情報を返します。"

#: ../docs/applications/libraries/python.rst:756
msgid "Device diagnostic operations"
msgstr ""
"デバイスの診断操作"

#: ../docs/applications/libraries/python.rst:758
msgid "Applications can use device diagnostic operations to clear logs, retrieve all or specific logs for a device, add log information, delete logs, clear error codes, get device error codes, and add an error codes."
msgstr ""
"アプリケーションはデバイスの診断操作を使用して、ログ消去、デバイスのすべてまたは特定のログの取得、ログ情報の追加、ログの削除、エラー・コードのクリア、デバイスのエラー・コードの取得、およびエラー・コードの追加を実行できます。"

#: ../docs/applications/libraries/python.rst:760
msgid "For more detailed information on query and response models, response codes, and query paramters, please see the relevant API documentation."
msgstr ""
"照会と応答モデル、応答コード、および照会パラメーターの詳細情報は、関連する API 資料を参照してください。"

#: ../docs/applications/libraries/python.rst:763
msgid "Get Diagnostic logs"
msgstr ""
"診断ログの取得"

#: ../docs/applications/libraries/python.rst:765
msgid "The *getAllDiagnosticLogs()* method is used to retrieve all diagnostic logs for a specific device. The *getAllDiagnosticLogs()* method requires the deviceTypeId and deviceId parameters."
msgstr ""
"*getAllDiagnosticLogs()* メソッドを使用すると、特定のデバイスのすべての診断ログが取得されます。*getAllDiagnosticLogs()* メソッドは、deviceTypeId パラメーターと deviceId パラメーターを必要とします。"

#: ../docs/applications/libraries/python.rst:771
msgid "The response model for this method contains the logId, message, severity, data, and timestamp."
msgstr ""
"このメソッドの応答モデルには、logId、メッセージ、重大度、データおよびタイム・スタンプが含まれます。"

#: ../docs/applications/libraries/python.rst:774
msgid "Clear Diagnostic logs for a Device"
msgstr ""
"デバイスの診断ログのクリア"

#: ../docs/applications/libraries/python.rst:776
msgid "The *clearAllDiagnosticLogs()* method is used to delete all diagnostic logs for a specific device. The required parameters are deviceTypeId and deviceId. Care should be taken when deleting logs, as logs cannot be recovered once deleted."
msgstr ""
"*clearAllDiagnosticLogs()* メソッドを使用すると、特定のデバイスのすべての診断ログが削除されます。必須パラメーターは、deviceTypeId と deviceId です。ログは削除すると復旧できないので、ログの削除の際は注意してください。"

#: ../docs/applications/libraries/python.rst:784
msgid "Add a Diagnostic log"
msgstr ""
"診断ログの追加"

#: ../docs/applications/libraries/python.rst:786
msgid "The *addDiagnosticLog()* method is used to add an entry in the diagnostic log of the device. The log may be pruned as the new entry is added. If no date is supplied, the entry is added with the current date and time. To use this method, first define a 'logs' parameter with the following variables:"
msgstr ""
"*addDiagnosticLog()* メソッドを使用すると、デバイスの診断ログのエントリーが追加されます。新しいエントリーが追加されると、ログが整理されることがあります。日付が指定されない場合、現在の日付と時刻を使用してエントリーが追加されます。このメソッドを使用するには、最初に 'logs' パラメーターに次の変数を指定して定義します。"

#: ../docs/applications/libraries/python.rst:788
msgid "message: This variable is mandatory, and contains the new diagnostic message."
msgstr ""
"message: この変数は必須で、新しい診断メッセージを含みます。"

#: ../docs/applications/libraries/python.rst:789
msgid "severity: This variable is optional. If used it corresponds to the severity of the diagnostic log, and should be 0, 1, or 2, corresponding to the informational, warning, and error categories."
msgstr ""
"severity: この変数はオプションです。使用すると、診断ログの重大度に対応し、0、1、または 2 がそれぞれ情報、警告、エラーのカテゴリーに対応します。"

#: ../docs/applications/libraries/python.rst:790
msgid "data: This variable is optional, and should contain diagnostic data."
msgstr ""
"data: この変数はオプションで、診断データを含める必要があります。"

#: ../docs/applications/libraries/python.rst:791
#: ../docs/applications/libraries/python.rst:849
msgid "timestamp: This variable is optional, and contains the date and time of the log entry in ISO8601 format. If this variable is not included, it is automatically added with the current date and time."
msgstr ""
"timestamp: この変数はオプションで、ログのエントリーの日付と時刻が ISO8601 形式で含まれます。この変数が含まれないと、現在の日付と時刻が自動的に追加されます。"

#: ../docs/applications/libraries/python.rst:793
msgid "The other necessary paramteres required in the method are the deviceTypeId and deviceId for the specific device."
msgstr ""
"メソッドで要求されるその他の必要なパラメーターは、特定のデバイスの deviceTypeId と deviceId です。"

#: ../docs/applications/libraries/python.rst:795
msgid "The code sample below contains an example of the method."
msgstr ""
"以下のコード・サンプルに、メソッドの例が含まれます。"

#: ../docs/applications/libraries/python.rst:804
msgid "Retrieve a specific Diagnostic log"
msgstr ""
"特定の診断ログの取得"

#: ../docs/applications/libraries/python.rst:806
msgid "The *getDiagnosticLog()* method is used to retrieve a specific diagnostic log for a specified device based on the log id. The required parameters for this method are the deviceTypeId, deviceId, and logId."
msgstr ""
"*getDiagnosticLog()* メソッドを使用すると、ログ ID に基づいて、指定されたデバイスの特定の診断ログが取得されます。このメソッドの必須パラメーターは、deviceTypeId、deviceId、および logId です。"

#: ../docs/applications/libraries/python.rst:814
msgid "Delete a Diagnostic log"
msgstr ""
"診断ログの削除"

#: ../docs/applications/libraries/python.rst:816
msgid "The *deleteDiagnosticLog()* can be used to delete a specific diagnostic log. In order to specify a diagnostic log, the deviceTypeId, deviceId, and logId parameters should be supplied."
msgstr ""
"*deleteDiagnosticLog()* を使用すると、特定の診断ログを削除できます。診断ログを指定するには、deviceTypeId、deviceId、および logId のパラメーターを指定する必要があります。"

#: ../docs/applications/libraries/python.rst:824
msgid "Retrieve Device Error Codes"
msgstr ""
"デバイスのエラー・コードの取得"

#: ../docs/applications/libraries/python.rst:826
msgid "The *getAllDiagnosticErrorCodes()* method is used to retrieve all diagnostic error codes associated with a specific device."
msgstr ""
"*getAllDiagnosticErrorCodes()* メソッドを使用すると、特定のデバイスに関連付けられたすべての診断エラー・コードが取得されます。"

#: ../docs/applications/libraries/python.rst:834
msgid "Clear Diagnostic Error Codes"
msgstr ""
"診断エラー・コードの消去"

#: ../docs/applications/libraries/python.rst:836
msgid "The *clearAllErrorCodes()* method is used to clear the list of error codes associated with the device. The list is replaced with a single error code of zero."
msgstr ""
"*clearAllErrorCodes()* メソッドを使用すると、デバイスに関連付けられたエラー・コードのリストがクリアされます。リストは単一エラー・コードのゼロに置き換えられます。"

#: ../docs/applications/libraries/python.rst:844
msgid "Add single Diagnostic ErrorCode"
msgstr ""
"単一の診断 ErrorCode の追加"

#: ../docs/applications/libraries/python.rst:846
msgid "The *addErrorCode()* method is used to add an error code to the list of error codes associated with the device. The list may be pruned as the new entry is added. The parameters required in the method are deviceTypeId, deviceId, and errorCode. The errorCode parameter contains the following variables:"
msgstr ""
"*addErrorCode()* メソッドを使用すると、エラー・コードがデバイスに関連付けられたエラー・コードのリストに追加されます。新しいエントリーが追加されると、リストが整理されることがあります。メソッドで必要なパラメーターは、deviceTypeId、deviceId、および errorCode です。errorCode パラメーターには、次の変数が含まれます。"

#: ../docs/applications/libraries/python.rst:848
msgid "errorCode: This variable is mandatory and should be set as an integer. This sets the number of the error code to be created."
msgstr ""
"errorCode: この変数は必須で、整数として設定する必要があります。これは、作成するエラー・コードの数を設定します。"

#: ../docs/applications/libraries/python.rst:859
msgid "Connection problem determination"
msgstr ""
"接続の問題判別"

#: ../docs/applications/libraries/python.rst:861
msgid "The *getDeviceConnectionLogs()* method is used to list connection log events for a device. This information can be used to help diagnose connectivity problems between the device and the IoT Platform service. The entries record successful connection, unsuccessful connection attempts, intentional disconnection and server-initiated disconnection events."
msgstr ""
"*getDeviceConnectionLogs()* メソッドを使用すると、デバイスの接続ログ・イベントがリストされます。この情報は、デバイスと IoT Platform サービスの接続の問題を診断するときに役立ちます。エントリーは、成功した接続、失敗した接続試行、意図的な切断、サーバーが開始した切断イベントを記録します。"

#: ../docs/applications/libraries/python.rst:867
msgid "The response includes a list of log entries, containing log messages and timestamps."
msgstr ""
"応答には、ログ・メッセージとタイム・スタンプを含むログ・エントリーのリストが含まれます。"

#: ../docs/applications/libraries/python.rst:872
msgid "Historical Event Retrieval"
msgstr ""
"履歴イベントの取得"

#: ../docs/applications/libraries/python.rst:874
msgid "These operations can be used to view events from all devices, view events from a device type or to view events for a specific device."
msgstr ""
"これらの操作を使用すると、全デバイスのイベントの表示、1 つのデバイス・タイプのイベントの表示、特定のデバイスのイベントの表示を行うことができます。"

#: ../docs/applications/libraries/python.rst:876
msgid "Refer to the Historical Event Retrieval section of the `IBM IoT Platform API <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ for information about the list of query parameters, the request & response model and http status code."
msgstr ""
"照会パラメーター、要求と応答のモデル、および HTTP 状況コードのリストについての情報は、`「IBM IoT Platform API」の「履歴イベントの取得」セクション <https://docs.internetofthings.ibmcloud.com/swagger/v0002.html>`__ を参照してください。"

#: ../docs/applications/libraries/python.rst:879
msgid "View events from all devices"
msgstr ""
"すべてのデバイスのイベントを表示"

#: ../docs/applications/libraries/python.rst:881
msgid "Method getHistoricalEvents() can be used to view events across all devices registered to the organization."
msgstr ""
"getHistoricalEvents() メソッドを使用すると、組織に登録されたすべてのデバイスのイベントを表示できます。"

#: ../docs/applications/libraries/python.rst:887
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. Other parameters in the response are required to make further call, for example, the *_bookmark* element can be used to page through results. Issue the first request without specifying a bookmark, then take the bookmark returned in the response and provide it on the request for the next page. Repeat until the end of the result set indicated by the absence of a bookmark. Each request must use exactly the same values for the other parameters, or the results are undefined."
msgstr ""
"応答にはパラメーターが含まれ、アプリケーションが応答からの JSON 要素の *events* を取得して返されるイベントの配列を取得するために必要とします。応答のその他のパラメーターは、*_bookmark* 要素などを使用して結果をページ送りするために、さらに呼び出しを実行する場合に必要です。最初の要求はブックマークを指定しないで発行し、次に応答で返されるブックマークを取得して、次のページの要求で指定します。ブックマークがなくなることで示される結果セットの終わりまで繰り返します。各要求は、他のパラメーターと同じ値を正確に使用する必要があります。そうしないと結果が未定義になります。"

#: ../docs/applications/libraries/python.rst:898
msgid "The above snippet returns the events between the start and end time."
msgstr ""
"上記のスニペットは、開始時刻と終了時刻の間のイベントを返します。"

#: ../docs/applications/libraries/python.rst:901
msgid "View events from a device type"
msgstr ""
"デバイス・タイプからのイベントを表示"

#: ../docs/applications/libraries/python.rst:903
msgid "The *getHistoricalEvents()* method is used to view events from all the devices of a particular device type."
msgstr ""
"*getHistoricalEvents()* メソッドを使用すると、特定のデバイス・タイプのすべてのデバイスからのイベントが表示されます。"

#: ../docs/applications/libraries/python.rst:909
msgid "The response will contain some parameters and the application needs to retrieve the JSON element *events* from the response to get the array of events returned. As mentioned in the *view events from all devices* section, the overloaded method can be used to control the output."
msgstr ""
"応答にはパラメーターが含まれ、アプリケーションが応答からの JSON 要素の *events* を取得して返されるイベントの配列を取得するために必要とします。*全デバイスのイベントの表示* のセクションで説明したように、多重定義されたメソッドを、出力の制御に使用できます。"

#: ../docs/applications/libraries/python.rst:913
msgid "View events from a device"
msgstr ""
"デバイスからのイベントを表示"

#: ../docs/applications/libraries/python.rst:915
msgid "The *getHistoricalEvents()* method is used to view events from a specific device. DeviceTypeId and deviceId parameters are required in order to use this method."
msgstr ""
"*getHistoricalEvents()* メソッドを使用すると、特定のデバイスのイベントが表示されます。このメソッドを使用するには、DeviceTypeId と deviceId パラメーターが必要です。"

#: ../docs/applications/libraries/python.rst:921
msgid "The response will contain more parameters and application needs to retrieve the JSON element *events* from the response to get the array of events returned."
msgstr ""
"応答にはより多くのパラメーターが含まれ、アプリケーションが応答からの JSON 要素の *events* を取得して返されるイベントの配列を取得するために必要とします。"

