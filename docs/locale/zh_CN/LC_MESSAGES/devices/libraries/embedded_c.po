# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/devices/libraries/embedded_c.rst:2
msgid "Embedded C for Device Developers"
msgstr ""
"针对设备开发者的嵌入式 C"

#: ../docs/devices/libraries/embedded_c.rst:4
msgid "See `iotf-embeddedc <https://github.com/ibm-messaging/iotf-embeddedc>`_ on GitHub"
msgstr ""
"请参阅 GitHub 上的 `iotf-embeddedc <https://github.com/ibm-messaging/iotf-embeddedc>`_"

#: ../docs/devices/libraries/embedded_c.rst:8
msgid "Dependencies"
msgstr ""
"依赖关系"

#: ../docs/devices/libraries/embedded_c.rst:10
msgid "`Eclipse Paho Embedded C library <http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.embedded-c.git/>`__ - provides an MQTT C client library, check `here <http://www.eclipse.org/paho/clients/c/embedded/>`__ for more information."
msgstr ""
"`Eclipse Paho 嵌入式 C 库 <http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.embedded-c.git/>`__ - 提供了 MQTT C 客户机库，请查看 `此处 <http://www.eclipse.org/paho/clients/c/embedded/>`__ 以获取更多信息。"

#: ../docs/devices/libraries/embedded_c.rst:14
msgid "Installation"
msgstr ""
"安装"

#: ../docs/devices/libraries/embedded_c.rst:15
msgid "To install the IoT Platform client library for Embedded C follow the instructions below."
msgstr ""
"要安装针对嵌入式 C 的 IoT Platform 客户机库，请遵循以下指示信息。"

#: ../docs/devices/libraries/embedded_c.rst:17
msgid "To install the latest version of the library, enter the following code in your command line."
msgstr ""
"要安装库的最新版本，请在命令行中输入以下代码。"

#: ../docs/devices/libraries/embedded_c.rst:23
msgid "Copy the Paho library .tar file that was downloaded in the previous step to the *lib* directory."
msgstr ""
"将先前步骤中下载的 Paho 库 .tar 文件复制到 *lib* 目录。"

#: ../docs/devices/libraries/embedded_c.rst:30
msgid "Extract the library file"
msgstr ""
"解压库文件"

#: ../docs/devices/libraries/embedded_c.rst:38
msgid "When downloaded, the client has the following file structure:"
msgstr ""
"下载后，客户机具有以下文件结构："

#: ../docs/devices/libraries/embedded_c.rst:54
msgid "Initializing the Client Library"
msgstr ""
"初始化客户机库"

#: ../docs/devices/libraries/embedded_c.rst:56
msgid "After downloading the client library, it must be initialized and connected to the IoT Platform. There are 2 ways to initialize the IoT Platform Client Library for Embedded C:"
msgstr ""
"下载客户机库后，必须对其进行初始化并将其连接到 IoT Platform。可通过两种方式初始化针对嵌入式 C 的 IoT Platform 客户机库："

#: ../docs/devices/libraries/embedded_c.rst:59
msgid "Passing as Parameters"
msgstr ""
"作为参数传递"

#: ../docs/devices/libraries/embedded_c.rst:61
msgid "The 'initialize' function takes the following details to connect to the IoT Platform service:"
msgstr ""
"“initialize”函数采用以下详细信息来连接到 IoT Platform 服务："

#: ../docs/devices/libraries/embedded_c.rst:63
msgid "client - Pointer to the *iotfclient*"
msgstr ""
"client - 指向 *iotfclient* 的指针"

#: ../docs/devices/libraries/embedded_c.rst:64
msgid "org - Your organization ID"
msgstr ""
"org - 您的组织标识"

#: ../docs/devices/libraries/embedded_c.rst:65
msgid "type - The type of your device"
msgstr ""
"type - 您设备的类型"

#: ../docs/devices/libraries/embedded_c.rst:66
msgid "id - The device ID"
msgstr ""
"id - 设备标识"

#: ../docs/devices/libraries/embedded_c.rst:67
msgid "authmethod - Method of authentication (the only value currently supported is \"token\")"
msgstr ""
"authmethod - 认证方法（当前唯一支持的值为“token”）"

#: ../docs/devices/libraries/embedded_c.rst:68
msgid "authtoken - API key token (required if auth-method is \"token\")"
msgstr ""
"authtoken - API 密钥令牌（如果 auth-method 为“token”，那么此项为必需项）"

#: ../docs/devices/libraries/embedded_c.rst:84
msgid "Using a Configuration File"
msgstr ""
"使用配置文件"

#: ../docs/devices/libraries/embedded_c.rst:86
msgid "You can also use a configuration file to initialize the Embedded C client library. The function 'initialize\\_configfile' takes the configuration file path as a parameter."
msgstr ""
"您还可使用配置文件初始化嵌入式 C 客户机库。函数“initialize\\_configfile”采用配置文件路径作为参数。"

#: ../docs/devices/libraries/embedded_c.rst:99
msgid "The configuration file must use the following format."
msgstr ""
"配置文件必须使用以下格式。"

#: ../docs/devices/libraries/embedded_c.rst:111
msgid "Connecting to the Service"
msgstr ""
"连接到服务"

#: ../docs/devices/libraries/embedded_c.rst:113
msgid "After initializing the IoT Platform Embedded C client library, you can connect to the IoT Platform by calling the 'connectiotf' function."
msgstr ""
"初始化 IoT Platform 嵌入式 C 客户机库后，可以通过调用“connectiotf”函数连接到 IoT Platform。"

#: ../docs/devices/libraries/embedded_c.rst:141
msgid "Handling commands"
msgstr ""
"处理命令"

#: ../docs/devices/libraries/embedded_c.rst:143
msgid "When the device client connects, it automatically subscribes to any command for this device. To process specific commands you need to register a command callback function by calling the function 'setCommandHandler'. The commands are returned as:"
msgstr ""
"设备客户机连接时，会自动预订此设备的任何命令。要处理特定命令，需要通过调用函数“setCommandHandler”来注册命令回调函数。命令按如下返回："

#: ../docs/devices/libraries/embedded_c.rst:145
msgid "commandName - name of the command invoked"
msgstr ""
"commandName - 所调用命令的名称"

#: ../docs/devices/libraries/embedded_c.rst:146
msgid "format - e.g json, xml"
msgstr ""
"format - 例如，json 和 xml"

#: ../docs/devices/libraries/embedded_c.rst:147
msgid "payload"
msgstr ""
"有效内容"

#: ../docs/devices/libraries/embedded_c.rst:169
msgid "The 'yield' function must be called periodically to receive commands."
msgstr ""
"必须定期调用“yield”函数来接收命令。"

#: ../docs/devices/libraries/embedded_c.rst:173
msgid "Publishing events"
msgstr ""
"发布事件"

#: ../docs/devices/libraries/embedded_c.rst:175
msgid "Events can be published by using:"
msgstr ""
"可以通过使用以下项来发布事件："

#: ../docs/devices/libraries/embedded_c.rst:177
msgid "eventType - Type of event to be published e.g status, gps"
msgstr ""
"eventType - 要发布的事件的类型，例如，status 和 gps"

#: ../docs/devices/libraries/embedded_c.rst:178
msgid "eventFormat - Format of the event e.g json"
msgstr ""
"eventFormat - 事件的格式，例如，json"

#: ../docs/devices/libraries/embedded_c.rst:179
msgid "data - Payload of the event"
msgstr ""
"data - 事件的有效内容"

#: ../docs/devices/libraries/embedded_c.rst:180
msgid "QoS - qos for the publish event. Supported values : QOS0, QOS1, QOS2"
msgstr ""
"QoS - 发布事件的 qos。受支持的值为：QOS0、QOS1 和 QOS2"

#: ../docs/devices/libraries/embedded_c.rst:194
msgid "Disconnect Client"
msgstr ""
"断开客户机连接"

#: ../docs/devices/libraries/embedded_c.rst:196
msgid "To disconnect the client and release the connections, run the following code snippet."
msgstr ""
"要断开客户机连接并释放连接，请运行以下代码片段。"

#: ../docs/devices/libraries/embedded_c.rst:212
msgid "Samples"
msgstr ""
"样本"

#: ../docs/devices/libraries/embedded_c.rst:214
msgid "Sample device and application code is provided in `GitHub <https://github.com/ibm-messaging/iotf-embeddedc/tree/master/samples>`_."
msgstr ""
"`GitHub <https://github.com/ibm-messaging/iotf-embeddedc/tree/master/samples>`_ 中提供了设备和应用程序代码样本。"

