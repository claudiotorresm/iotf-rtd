# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, IBM Corporation
# This file is distributed under the same license as the IBM IOT Foundation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IBM IOT Foundation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-15 21:50-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../docs/applications/libraries/nodejs.rst:2
msgid "Node.js for Application Developers"
msgstr ""
"针对应用程序开发者的 Node.js"

#: ../docs/applications/libraries/nodejs.rst:4
msgid "See `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_ in GitHub"
msgstr ""
"请参阅 GitHub 中的 `iot-nodejs <https://github.com/ibm-messaging/iot-nodejs>`_"

#: ../docs/applications/libraries/nodejs.rst:5
msgid "See the `samples for device <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_ in Github"
msgstr ""
"请参阅 Github 中的 `设备样本 <https://github.com/ibm-messaging/iot-nodejs/tree/master/samples>`_"

#: ../docs/applications/libraries/nodejs.rst:6
msgid "See `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_ on NPM"
msgstr ""
"请参阅 NPM 上的 `ibmiotf <https://www.npmjs.com/package/ibmiotf>`_"

#: ../docs/applications/libraries/nodejs.rst:13
msgid "Application"
msgstr ""
"应用程序"

#: ../docs/applications/libraries/nodejs.rst:15
msgid "*ApplicationClient* is application client for the Internet of Things Foundation service. This section contains information on how applications interact with devices."
msgstr ""
"*ApplicationClient* 是 Internet of Things Foundation 服务的应用程序客户机。此部分包含有关应用程序如何来与设备进行交互的信息。"

#: ../docs/applications/libraries/nodejs.rst:20
msgid "Constructor"
msgstr ""
"构造方法"

#: ../docs/applications/libraries/nodejs.rst:22
msgid "The constructor builds the application client instance. It accepts an configuration json containing the following :"
msgstr ""
"此构造方法用于构建应用程序客户机实例。它接受包含以下内容的配置 json："

#: ../docs/applications/libraries/nodejs.rst:25
msgid "org - Your organization ID"
msgstr ""
"org - 您的组织标识"

#: ../docs/applications/libraries/nodejs.rst:26
msgid "id - The unique ID of your application within your organization."
msgstr ""
"id - 贵组织内应用程序的唯一标识。"

#: ../docs/applications/libraries/nodejs.rst:27
msgid "auth-key - API key"
msgstr ""
"auth-key - API 密钥"

#: ../docs/applications/libraries/nodejs.rst:28
msgid "auth-token - API key token"
msgstr ""
"auth-token - API 密钥令牌"

#: ../docs/applications/libraries/nodejs.rst:29
msgid "type - use 'shared' to enable shared subscription"
msgstr ""
"type - 使用“shared”来启用共享预订"

#: ../docs/applications/libraries/nodejs.rst:31
msgid "If you want to use quickstart, then send only the first two properties."
msgstr ""
"如果想要使用 Quickstart，只需发送前两个属性。"

#: ../docs/applications/libraries/nodejs.rst:49
msgid "Using a configuration file"
msgstr ""
"使用配置文件"

#: ../docs/applications/libraries/nodejs.rst:51
msgid "Instead of passing the configuration json directly, you can also use a configuration file. Use the following code snippet"
msgstr ""
"除了直接传递配置 json 之外，您还可以使用配置文件。请使用以下代码片段："

#: ../docs/applications/libraries/nodejs.rst:62
msgid "The configuration file must be in the format of"
msgstr ""
"配置文件必须为以下格式"

#: ../docs/applications/libraries/nodejs.rst:78
msgid "Connecting to the IoT Platform"
msgstr ""
"连接到 IoT Platform"

#: ../docs/applications/libraries/nodejs.rst:80
msgid "Connect to the IBM Watson Internet of Things Platform by calling the *connect*"
msgstr ""
"通过调用 *connect* 连接到 IBM Watson Internet of Things Platform"

#: ../docs/applications/libraries/nodejs.rst:94
msgid "After the successful connection to the IoT Platform service, the application client sends a *connect* event. So all the logic can be implemented inside this callback function."
msgstr ""
"成功连接到 IoT Platform 服务后，应用程序客户机将发送 *connect* 事件。因此，可以在此回调函数内实现所有逻辑。"

#: ../docs/applications/libraries/nodejs.rst:96
msgid "The Application Client automatically tries to reconnect when it loses connection. When the reconnection is successful, the client emits *reconnect* event."
msgstr ""
"应用程序客户机在失去连接时会自动尝试重新连接。当重新连接成功时，客户机将发出 *reconnect* 事件。"

#: ../docs/applications/libraries/nodejs.rst:100
msgid "Logging"
msgstr ""
"日志记录"

#: ../docs/applications/libraries/nodejs.rst:102
msgid "By default, all the logs of ```warn``` are logged. If you want to enable more logs, use the *log.setLevel* function. Supported log levels - *trace, debug, info, warn, error*."
msgstr ""
"缺省情况下，将记录所有“warn”日志。如果想要启用更多日志，请使用 *log.setLevel* 函数。支持的日志级别 - *trace、debug、info、warn 和 error*。"

#: ../docs/applications/libraries/nodejs.rst:118
msgid "Shared Subscription"
msgstr ""
"共享预订"

#: ../docs/applications/libraries/nodejs.rst:120
msgid "Use this feature to build scalable applications which will load balance messages across multiple instances of the application. To enable this, pass 'type' as 'shared' in the configuration."
msgstr ""
"使用此功能构建将在多个应用程序实例中均衡消息负载的可扩展应用程序。要启用此功能，请在配置中传递“shared”作为“type”。"

#: ../docs/applications/libraries/nodejs.rst:143
msgid "Handling errors"
msgstr ""
"处理错误"

#: ../docs/applications/libraries/nodejs.rst:145
msgid "When the application clients encounters an error, it emits an *error* event."
msgstr ""
"当应用程序客户机遇到错误时，将发出 *error* 事件。"

#: ../docs/applications/libraries/nodejs.rst:164
msgid "Subscribing to device events"
msgstr ""
"预订设备事件"

#: ../docs/applications/libraries/nodejs.rst:166
msgid "Events are the mechanism by which devices publish data to the IoT Platform. The device controls the content of the event and assigns a name for each event it sends."
msgstr ""
"事件是设备用于将数据发布到 IoT Platform 的机制。设备控制事件的内容，并为其发送的每个事件分配名称。"

#: ../docs/applications/libraries/nodejs.rst:168
msgid "When an event is received by the IoT Platform, the credentials of the connection on which the event was received are used to determine from which device the event was sent. Using this architecture, it is impossible for a device to impersonate another device."
msgstr ""
"IoT Platform 接收到事件时，将使用用于接收该事件的连接的凭证来确定是从哪个设备发送了该事件。由于使用这种体系结构，设备将无法模拟其他设备。"

#: ../docs/applications/libraries/nodejs.rst:170
msgid "By default, applications will subscribe to all events from all connected devices. Use the type, id, event and msgFormat parameters to control the scope of the subscription. A single client can support multiple subscriptions. The code samples below give examples of how to subscribe to devices dependent on device type, id, event and msgFormat parameters."
msgstr ""
"缺省情况下，应用程序将预订来自所有已连接设备的所有事件。使用 type、id、event 和 msgFormat 参数控制预订的作用域。单个客户机可支持多个预订。以下代码样本提供了示例，说明如何根据设备的 type、id、event 和 msgFormat 参数来预订设备。"

#: ../docs/applications/libraries/nodejs.rst:173
msgid "To subscribe to all events from all devices"
msgstr ""
"预订来自所有设备的所有事件"

#: ../docs/applications/libraries/nodejs.rst:188
msgid "To subscribe to all events from all devices of a specific type"
msgstr ""
"预订来自特定类型的所有设备的所有事件"

#: ../docs/applications/libraries/nodejs.rst:202
msgid "To subscribe to a specific event from all devices"
msgstr ""
"预订来自所有设备的特定事件"

#: ../docs/applications/libraries/nodejs.rst:217
msgid "To subscribe to a specific event from two or more different devices"
msgstr ""
"预订来自两个或更多不同设备的特定事件"

#: ../docs/applications/libraries/nodejs.rst:232
msgid "To subscribe to all events published by a device in json format"
msgstr ""
"预订设备发布的 json 格式的所有事件"

#: ../docs/applications/libraries/nodejs.rst:248
msgid "Handling events from devices"
msgstr ""
"处理来自设备的事件"

#: ../docs/applications/libraries/nodejs.rst:250
msgid "To process the events received by your subscriptions you need to implement a device event callback method. The ibmiotf application client emits the event *deviceEvent*. This function has the following properties:"
msgstr ""
"要处理您的预订接收的事件，需要实现设备事件回调方法。ibmiotf 应用程序客户机将发出事件 *deviceEvent*。此函数具有以下属性："

#: ../docs/applications/libraries/nodejs.rst:252
#: ../docs/applications/libraries/nodejs.rst:337
msgid "deviceType"
msgstr ""
"deviceType"

#: ../docs/applications/libraries/nodejs.rst:253
#: ../docs/applications/libraries/nodejs.rst:338
msgid "deviceId"
msgstr ""
"deviceId"

#: ../docs/applications/libraries/nodejs.rst:254
msgid "eventType"
msgstr ""
"eventType"

#: ../docs/applications/libraries/nodejs.rst:255
msgid "format"
msgstr ""
"format"

#: ../docs/applications/libraries/nodejs.rst:256
msgid "payload - Device event payload"
msgstr ""
"payload - 设备事件有效内容"

#: ../docs/applications/libraries/nodejs.rst:257
msgid "topic - Original topic"
msgstr ""
"topic - 原始主题"

#: ../docs/applications/libraries/nodejs.rst:281
msgid "Subscribing to device status"
msgstr ""
"预订设备状态"

#: ../docs/applications/libraries/nodejs.rst:283
msgid "By default, this will subscribe to status updates for all connected devices. Use the type and id parameters to control the scope of the subscription. A single client can support multiple subscriptions."
msgstr ""
"缺省情况下，这将预订所有已连接设备的状态更新。使用 type 和 id 参数控制预订的作用域。单个客户机可支持多个预订。"

#: ../docs/applications/libraries/nodejs.rst:286
msgid "Subscribe to status updates for all devices"
msgstr ""
"预订所有设备的状态更新"

#: ../docs/applications/libraries/nodejs.rst:302
msgid "Subscribe to status updates for all devices of a specific type"
msgstr ""
"预订特定类型的所有设备的状态更新"

#: ../docs/applications/libraries/nodejs.rst:317
msgid "Subscribe to status updates for two different devices"
msgstr ""
"预订两种不同设备的状态更新"

#: ../docs/applications/libraries/nodejs.rst:333
msgid "Handling status updates from devices"
msgstr ""
"处理来自设备的状态更新"

#: ../docs/applications/libraries/nodejs.rst:335
msgid "To process the status updates received by your subscriptions you need to implement an device status callback method. The ibmiotf application client emits the event *deviceStatus*. This function has the following properties:"
msgstr ""
"要处理您的预订接收的状态更新，需要实现设备状态回调方法。ibmiotf 应用程序客户机将发出事件 *deviceStatus*。此函数具有以下属性："

#: ../docs/applications/libraries/nodejs.rst:339
msgid "payload - Device status payload"
msgstr ""
"payload - 设备状态有效内容"

#: ../docs/applications/libraries/nodejs.rst:340
msgid "topic"
msgstr ""
"topic"

#: ../docs/applications/libraries/nodejs.rst:365
msgid "Publishing events from devices"
msgstr ""
"发布来自设备的事件"

#: ../docs/applications/libraries/nodejs.rst:367
msgid "Applications can publish events as if they originated from a Device. The function requires:"
msgstr ""
"应用程序可以将事件视为来自设备一样进行发布。此函数需要以下属性："

#: ../docs/applications/libraries/nodejs.rst:369
#: ../docs/applications/libraries/nodejs.rst:398
msgid "DeviceType"
msgstr ""
"DeviceType"

#: ../docs/applications/libraries/nodejs.rst:370
#: ../docs/applications/libraries/nodejs.rst:399
msgid "Device ID"
msgstr ""
"设备标识"

#: ../docs/applications/libraries/nodejs.rst:371
msgid "Event Type"
msgstr ""
"EventType"

#: ../docs/applications/libraries/nodejs.rst:372
#: ../docs/applications/libraries/nodejs.rst:401
msgid "Format"
msgstr ""
"Format"

#: ../docs/applications/libraries/nodejs.rst:373
#: ../docs/applications/libraries/nodejs.rst:402
msgid "Data"
msgstr ""
"数据"

#: ../docs/applications/libraries/nodejs.rst:394
msgid "Publishing commands to devices"
msgstr ""
"将命令发布到设备"

#: ../docs/applications/libraries/nodejs.rst:396
msgid "Applications can publish commands to connected devices. The function requires:"
msgstr ""
"应用程序可将命令发布到所连接的设备。此函数需要以下属性："

#: ../docs/applications/libraries/nodejs.rst:400
msgid "Command Type"
msgstr ""
"命令类型"

#: ../docs/applications/libraries/nodejs.rst:423
msgid "Disconnect Client"
msgstr ""
"断开客户机连接"

#: ../docs/applications/libraries/nodejs.rst:425
msgid "Disconnects the client and releases the connections"
msgstr ""
"断开与客户机的连接并释放连接"

